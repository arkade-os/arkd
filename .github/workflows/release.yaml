name: Release Binaries and Docker Build

on:
  release:
    types: [released]

permissions:
  contents: write
  packages: write

jobs:
  buf-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - uses: bufbuild/buf-setup-action@v1.50.0

      - name: Check proto linting
        run: buf lint

      - name: Publish protos
        uses: bufbuild/buf-push-action@v1        
        with:
          input: api-spec/protobuf  
          buf_token: ${{ secrets.BUF_TOKEN }}

  build-and-upload:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v6
        with:
          go-version: 1.25.3

      # Build binaries for all architectures
      - name: Build binaries
        run: make build-all

      # arkd binary uploads
      - name: Upload arkd binary (Linux, AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-linux-amd64
          asset_name: arkd-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload arkd binary (Linux, ARM)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-linux-arm64
          asset_name: arkd-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload arkd binary (Darwin, AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-darwin-amd64
          asset_name: arkd-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload arkd binary (Darwin, ARM)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-darwin-arm64
          asset_name: arkd-darwin-arm64
          asset_content_type: application/octet-stream

      # arkd wallet binary uploads
      - name: Upload arkd wallet binary (Linux, AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-wallet-linux-amd64
          asset_name: arkd-wallet-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload arkd wallet binary (Linux, ARM)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-wallet-linux-arm64
          asset_name: arkd-wallet-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload arkd wallet binary (Darwin, AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-wallet-darwin-amd64
          asset_name: arkd-wallet-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload arkd wallet binary (Darwin, ARM)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./build/arkd-wallet-darwin-arm64
          asset_name: arkd-wallet-darwin-arm64
          asset_content_type: application/octet-stream
      
      # CLI binary uploads
      - name: Upload client binary (Linux, AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./pkg/ark-cli/build/ark-linux-amd64
          asset_name: ark-linux-amd64
          asset_content_type: application/octet-stream

      - name: Upload client binary (Linux, ARM)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./pkg/ark-cli/build/ark-linux-arm64
          asset_name: ark-linux-arm64
          asset_content_type: application/octet-stream

      - name: Upload client binary (Darwin, AMD64)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./pkg/ark-cli/build/ark-darwin-amd64
          asset_name: ark-darwin-amd64
          asset_content_type: application/octet-stream

      - name: Upload client binary (Darwin, ARM)
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: ./pkg/ark-cli/build/ark-darwin-arm64
          asset_name: ark-darwin-arm64
          asset_content_type: application/octet-stream

  docker-build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push arkd wallet Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./arkdwallet.Dockerfile
          push: true
          tags: |
            ghcr.io/arkade-os/arkd-wallet:${{ github.event.release.tag_name }}
            ghcr.io/arkade-os/arkd-wallet:latest
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.event.release.tag_name }}

      - name: Build and push arkd Docker image
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile 
          push: true
          tags: |
            ghcr.io/${{ github.repository }}:${{ github.event.release.tag_name }}
            ghcr.io/${{ github.repository }}:latest
          platforms: linux/amd64,linux/arm64
          build-args: |
            VERSION=${{ github.event.release.tag_name }}