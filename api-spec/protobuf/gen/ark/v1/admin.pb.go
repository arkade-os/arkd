// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: ark/v1/admin.proto

package arkv1

import (
	_ "github.com/meshapi/grpc-api-gateway/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CrimeType int32

const (
	CrimeType_CRIME_TYPE_UNSPECIFIED                 CrimeType = 0
	CrimeType_CRIME_TYPE_MUSIG2_NONCE_SUBMISSION     CrimeType = 1
	CrimeType_CRIME_TYPE_MUSIG2_SIGNATURE_SUBMISSION CrimeType = 2
	CrimeType_CRIME_TYPE_MUSIG2_INVALID_SIGNATURE    CrimeType = 3
	CrimeType_CRIME_TYPE_FORFEIT_SUBMISSION          CrimeType = 4
	CrimeType_CRIME_TYPE_FORFEIT_INVALID_SIGNATURE   CrimeType = 5
	CrimeType_CRIME_TYPE_BOARDING_INPUT_SUBMISSION   CrimeType = 6
	CrimeType_CRIME_TYPE_MANUAL_BAN                  CrimeType = 7
)

// Enum value maps for CrimeType.
var (
	CrimeType_name = map[int32]string{
		0: "CRIME_TYPE_UNSPECIFIED",
		1: "CRIME_TYPE_MUSIG2_NONCE_SUBMISSION",
		2: "CRIME_TYPE_MUSIG2_SIGNATURE_SUBMISSION",
		3: "CRIME_TYPE_MUSIG2_INVALID_SIGNATURE",
		4: "CRIME_TYPE_FORFEIT_SUBMISSION",
		5: "CRIME_TYPE_FORFEIT_INVALID_SIGNATURE",
		6: "CRIME_TYPE_BOARDING_INPUT_SUBMISSION",
		7: "CRIME_TYPE_MANUAL_BAN",
	}
	CrimeType_value = map[string]int32{
		"CRIME_TYPE_UNSPECIFIED":                 0,
		"CRIME_TYPE_MUSIG2_NONCE_SUBMISSION":     1,
		"CRIME_TYPE_MUSIG2_SIGNATURE_SUBMISSION": 2,
		"CRIME_TYPE_MUSIG2_INVALID_SIGNATURE":    3,
		"CRIME_TYPE_FORFEIT_SUBMISSION":          4,
		"CRIME_TYPE_FORFEIT_INVALID_SIGNATURE":   5,
		"CRIME_TYPE_BOARDING_INPUT_SUBMISSION":   6,
		"CRIME_TYPE_MANUAL_BAN":                  7,
	}
)

func (x CrimeType) Enum() *CrimeType {
	p := new(CrimeType)
	*p = x
	return p
}

func (x CrimeType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (CrimeType) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_admin_proto_enumTypes[0].Descriptor()
}

func (CrimeType) Type() protoreflect.EnumType {
	return &file_ark_v1_admin_proto_enumTypes[0]
}

func (x CrimeType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use CrimeType.Descriptor instead.
func (CrimeType) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{0}
}

type ConvictionType int32

const (
	ConvictionType_CONVICTION_TYPE_UNSPECIFIED ConvictionType = 0
	ConvictionType_CONVICTION_TYPE_SCRIPT      ConvictionType = 1
)

// Enum value maps for ConvictionType.
var (
	ConvictionType_name = map[int32]string{
		0: "CONVICTION_TYPE_UNSPECIFIED",
		1: "CONVICTION_TYPE_SCRIPT",
	}
	ConvictionType_value = map[string]int32{
		"CONVICTION_TYPE_UNSPECIFIED": 0,
		"CONVICTION_TYPE_SCRIPT":      1,
	}
)

func (x ConvictionType) Enum() *ConvictionType {
	p := new(ConvictionType)
	*p = x
	return p
}

func (x ConvictionType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ConvictionType) Descriptor() protoreflect.EnumDescriptor {
	return file_ark_v1_admin_proto_enumTypes[1].Descriptor()
}

func (ConvictionType) Type() protoreflect.EnumType {
	return &file_ark_v1_admin_proto_enumTypes[1]
}

func (x ConvictionType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ConvictionType.Descriptor instead.
func (ConvictionType) EnumDescriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{1}
}

type GetScheduledSweepRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduledSweepRequest) Reset() {
	*x = GetScheduledSweepRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduledSweepRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledSweepRequest) ProtoMessage() {}

func (x *GetScheduledSweepRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledSweepRequest.ProtoReflect.Descriptor instead.
func (*GetScheduledSweepRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{0}
}

type GetScheduledSweepResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Sweeps        []*ScheduledSweep      `protobuf:"bytes,1,rep,name=sweeps,proto3" json:"sweeps,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduledSweepResponse) Reset() {
	*x = GetScheduledSweepResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduledSweepResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledSweepResponse) ProtoMessage() {}

func (x *GetScheduledSweepResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledSweepResponse.ProtoReflect.Descriptor instead.
func (*GetScheduledSweepResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{1}
}

func (x *GetScheduledSweepResponse) GetSweeps() []*ScheduledSweep {
	if x != nil {
		return x.Sweeps
	}
	return nil
}

type GetRoundDetailsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundId       string                 `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoundDetailsRequest) Reset() {
	*x = GetRoundDetailsRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoundDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundDetailsRequest) ProtoMessage() {}

func (x *GetRoundDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundDetailsRequest.ProtoReflect.Descriptor instead.
func (*GetRoundDetailsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{2}
}

func (x *GetRoundDetailsRequest) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

type GetRoundDetailsResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	RoundId          string                 `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	StartedAt        int64                  `protobuf:"varint,2,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	EndedAt          int64                  `protobuf:"varint,3,opt,name=ended_at,json=endedAt,proto3" json:"ended_at,omitempty"`
	CommitmentTxid   string                 `protobuf:"bytes,4,opt,name=commitment_txid,json=commitmentTxid,proto3" json:"commitment_txid,omitempty"`
	ForfeitedAmount  string                 `protobuf:"bytes,5,opt,name=forfeited_amount,json=forfeitedAmount,proto3" json:"forfeited_amount,omitempty"`
	TotalVtxosAmount string                 `protobuf:"bytes,6,opt,name=total_vtxos_amount,json=totalVtxosAmount,proto3" json:"total_vtxos_amount,omitempty"`
	TotalExitAmount  string                 `protobuf:"bytes,7,opt,name=total_exit_amount,json=totalExitAmount,proto3" json:"total_exit_amount,omitempty"`
	TotalFeeAmount   string                 `protobuf:"bytes,8,opt,name=total_fee_amount,json=totalFeeAmount,proto3" json:"total_fee_amount,omitempty"`
	InputsVtxos      []string               `protobuf:"bytes,9,rep,name=inputs_vtxos,json=inputsVtxos,proto3" json:"inputs_vtxos,omitempty"`
	OutputsVtxos     []string               `protobuf:"bytes,10,rep,name=outputs_vtxos,json=outputsVtxos,proto3" json:"outputs_vtxos,omitempty"`
	ExitAddresses    []string               `protobuf:"bytes,11,rep,name=exit_addresses,json=exitAddresses,proto3" json:"exit_addresses,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *GetRoundDetailsResponse) Reset() {
	*x = GetRoundDetailsResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoundDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundDetailsResponse) ProtoMessage() {}

func (x *GetRoundDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundDetailsResponse.ProtoReflect.Descriptor instead.
func (*GetRoundDetailsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{3}
}

func (x *GetRoundDetailsResponse) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *GetRoundDetailsResponse) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *GetRoundDetailsResponse) GetEndedAt() int64 {
	if x != nil {
		return x.EndedAt
	}
	return 0
}

func (x *GetRoundDetailsResponse) GetCommitmentTxid() string {
	if x != nil {
		return x.CommitmentTxid
	}
	return ""
}

func (x *GetRoundDetailsResponse) GetForfeitedAmount() string {
	if x != nil {
		return x.ForfeitedAmount
	}
	return ""
}

func (x *GetRoundDetailsResponse) GetTotalVtxosAmount() string {
	if x != nil {
		return x.TotalVtxosAmount
	}
	return ""
}

func (x *GetRoundDetailsResponse) GetTotalExitAmount() string {
	if x != nil {
		return x.TotalExitAmount
	}
	return ""
}

func (x *GetRoundDetailsResponse) GetTotalFeeAmount() string {
	if x != nil {
		return x.TotalFeeAmount
	}
	return ""
}

func (x *GetRoundDetailsResponse) GetInputsVtxos() []string {
	if x != nil {
		return x.InputsVtxos
	}
	return nil
}

func (x *GetRoundDetailsResponse) GetOutputsVtxos() []string {
	if x != nil {
		return x.OutputsVtxos
	}
	return nil
}

func (x *GetRoundDetailsResponse) GetExitAddresses() []string {
	if x != nil {
		return x.ExitAddresses
	}
	return nil
}

type GetRoundsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	After         int64                  `protobuf:"varint,1,opt,name=after,proto3" json:"after,omitempty"`
	Before        int64                  `protobuf:"varint,2,opt,name=before,proto3" json:"before,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoundsRequest) Reset() {
	*x = GetRoundsRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoundsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundsRequest) ProtoMessage() {}

func (x *GetRoundsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundsRequest.ProtoReflect.Descriptor instead.
func (*GetRoundsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{4}
}

func (x *GetRoundsRequest) GetAfter() int64 {
	if x != nil {
		return x.After
	}
	return 0
}

func (x *GetRoundsRequest) GetBefore() int64 {
	if x != nil {
		return x.Before
	}
	return 0
}

type GetRoundsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Rounds        []string               `protobuf:"bytes,1,rep,name=rounds,proto3" json:"rounds,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRoundsResponse) Reset() {
	*x = GetRoundsResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRoundsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRoundsResponse) ProtoMessage() {}

func (x *GetRoundsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRoundsResponse.ProtoReflect.Descriptor instead.
func (*GetRoundsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{5}
}

func (x *GetRoundsResponse) GetRounds() []string {
	if x != nil {
		return x.Rounds
	}
	return nil
}

type CreateNoteRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Amount        uint32                 `protobuf:"varint,1,opt,name=amount,proto3" json:"amount,omitempty"`
	Quantity      uint32                 `protobuf:"varint,2,opt,name=quantity,proto3" json:"quantity,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteRequest) Reset() {
	*x = CreateNoteRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteRequest) ProtoMessage() {}

func (x *CreateNoteRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteRequest.ProtoReflect.Descriptor instead.
func (*CreateNoteRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{6}
}

func (x *CreateNoteRequest) GetAmount() uint32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *CreateNoteRequest) GetQuantity() uint32 {
	if x != nil {
		return x.Quantity
	}
	return 0
}

type CreateNoteResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Notes         []string               `protobuf:"bytes,1,rep,name=notes,proto3" json:"notes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateNoteResponse) Reset() {
	*x = CreateNoteResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateNoteResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateNoteResponse) ProtoMessage() {}

func (x *CreateNoteResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateNoteResponse.ProtoReflect.Descriptor instead.
func (*CreateNoteResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{7}
}

func (x *CreateNoteResponse) GetNotes() []string {
	if x != nil {
		return x.Notes
	}
	return nil
}

type GetScheduledSessionConfigRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduledSessionConfigRequest) Reset() {
	*x = GetScheduledSessionConfigRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduledSessionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledSessionConfigRequest) ProtoMessage() {}

func (x *GetScheduledSessionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledSessionConfigRequest.ProtoReflect.Descriptor instead.
func (*GetScheduledSessionConfigRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{8}
}

type GetScheduledSessionConfigResponse struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Config        *ScheduledSessionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetScheduledSessionConfigResponse) Reset() {
	*x = GetScheduledSessionConfigResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetScheduledSessionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetScheduledSessionConfigResponse) ProtoMessage() {}

func (x *GetScheduledSessionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetScheduledSessionConfigResponse.ProtoReflect.Descriptor instead.
func (*GetScheduledSessionConfigResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{9}
}

func (x *GetScheduledSessionConfigResponse) GetConfig() *ScheduledSessionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateScheduledSessionConfigRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Config        *ScheduledSessionConfig `protobuf:"bytes,1,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScheduledSessionConfigRequest) Reset() {
	*x = UpdateScheduledSessionConfigRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScheduledSessionConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduledSessionConfigRequest) ProtoMessage() {}

func (x *UpdateScheduledSessionConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduledSessionConfigRequest.ProtoReflect.Descriptor instead.
func (*UpdateScheduledSessionConfigRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateScheduledSessionConfigRequest) GetConfig() *ScheduledSessionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type UpdateScheduledSessionConfigResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateScheduledSessionConfigResponse) Reset() {
	*x = UpdateScheduledSessionConfigResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateScheduledSessionConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateScheduledSessionConfigResponse) ProtoMessage() {}

func (x *UpdateScheduledSessionConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateScheduledSessionConfigResponse.ProtoReflect.Descriptor instead.
func (*UpdateScheduledSessionConfigResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{11}
}

type ListIntentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentIds     []string               `protobuf:"bytes,1,rep,name=intent_ids,json=intentIds,proto3" json:"intent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIntentsRequest) Reset() {
	*x = ListIntentsRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIntentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntentsRequest) ProtoMessage() {}

func (x *ListIntentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntentsRequest.ProtoReflect.Descriptor instead.
func (*ListIntentsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{12}
}

func (x *ListIntentsRequest) GetIntentIds() []string {
	if x != nil {
		return x.IntentIds
	}
	return nil
}

type ListIntentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Intents       []*IntentInfo          `protobuf:"bytes,1,rep,name=intents,proto3" json:"intents,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListIntentsResponse) Reset() {
	*x = ListIntentsResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListIntentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListIntentsResponse) ProtoMessage() {}

func (x *ListIntentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListIntentsResponse.ProtoReflect.Descriptor instead.
func (*ListIntentsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{13}
}

func (x *ListIntentsResponse) GetIntents() []*IntentInfo {
	if x != nil {
		return x.Intents
	}
	return nil
}

type DeleteIntentsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IntentIds     []string               `protobuf:"bytes,1,rep,name=intent_ids,json=intentIds,proto3" json:"intent_ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIntentsRequest) Reset() {
	*x = DeleteIntentsRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIntentsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntentsRequest) ProtoMessage() {}

func (x *DeleteIntentsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntentsRequest.ProtoReflect.Descriptor instead.
func (*DeleteIntentsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteIntentsRequest) GetIntentIds() []string {
	if x != nil {
		return x.IntentIds
	}
	return nil
}

type DeleteIntentsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteIntentsResponse) Reset() {
	*x = DeleteIntentsResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteIntentsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteIntentsResponse) ProtoMessage() {}

func (x *DeleteIntentsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteIntentsResponse.ProtoReflect.Descriptor instead.
func (*DeleteIntentsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{15}
}

type GetConvictionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ids           []string               `protobuf:"bytes,1,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConvictionsRequest) Reset() {
	*x = GetConvictionsRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConvictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvictionsRequest) ProtoMessage() {}

func (x *GetConvictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvictionsRequest.ProtoReflect.Descriptor instead.
func (*GetConvictionsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{16}
}

func (x *GetConvictionsRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type GetConvictionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Convictions   []*Conviction          `protobuf:"bytes,1,rep,name=convictions,proto3" json:"convictions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConvictionsResponse) Reset() {
	*x = GetConvictionsResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConvictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvictionsResponse) ProtoMessage() {}

func (x *GetConvictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvictionsResponse.ProtoReflect.Descriptor instead.
func (*GetConvictionsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{17}
}

func (x *GetConvictionsResponse) GetConvictions() []*Conviction {
	if x != nil {
		return x.Convictions
	}
	return nil
}

type GetConvictionsInRangeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	From          int64                  `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"` // Unix timestamp
	To            int64                  `protobuf:"varint,2,opt,name=to,proto3" json:"to,omitempty"`     // Unix timestamp
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConvictionsInRangeRequest) Reset() {
	*x = GetConvictionsInRangeRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConvictionsInRangeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvictionsInRangeRequest) ProtoMessage() {}

func (x *GetConvictionsInRangeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvictionsInRangeRequest.ProtoReflect.Descriptor instead.
func (*GetConvictionsInRangeRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{18}
}

func (x *GetConvictionsInRangeRequest) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetConvictionsInRangeRequest) GetTo() int64 {
	if x != nil {
		return x.To
	}
	return 0
}

type GetConvictionsInRangeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Convictions   []*Conviction          `protobuf:"bytes,1,rep,name=convictions,proto3" json:"convictions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConvictionsInRangeResponse) Reset() {
	*x = GetConvictionsInRangeResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConvictionsInRangeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvictionsInRangeResponse) ProtoMessage() {}

func (x *GetConvictionsInRangeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvictionsInRangeResponse.ProtoReflect.Descriptor instead.
func (*GetConvictionsInRangeResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{19}
}

func (x *GetConvictionsInRangeResponse) GetConvictions() []*Conviction {
	if x != nil {
		return x.Convictions
	}
	return nil
}

type GetConvictionsByRoundRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundId       string                 `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConvictionsByRoundRequest) Reset() {
	*x = GetConvictionsByRoundRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConvictionsByRoundRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvictionsByRoundRequest) ProtoMessage() {}

func (x *GetConvictionsByRoundRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvictionsByRoundRequest.ProtoReflect.Descriptor instead.
func (*GetConvictionsByRoundRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{20}
}

func (x *GetConvictionsByRoundRequest) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

type GetConvictionsByRoundResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Convictions   []*Conviction          `protobuf:"bytes,1,rep,name=convictions,proto3" json:"convictions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetConvictionsByRoundResponse) Reset() {
	*x = GetConvictionsByRoundResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetConvictionsByRoundResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetConvictionsByRoundResponse) ProtoMessage() {}

func (x *GetConvictionsByRoundResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetConvictionsByRoundResponse.ProtoReflect.Descriptor instead.
func (*GetConvictionsByRoundResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{21}
}

func (x *GetConvictionsByRoundResponse) GetConvictions() []*Conviction {
	if x != nil {
		return x.Convictions
	}
	return nil
}

type GetActiveScriptConvictionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        string                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveScriptConvictionsRequest) Reset() {
	*x = GetActiveScriptConvictionsRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveScriptConvictionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveScriptConvictionsRequest) ProtoMessage() {}

func (x *GetActiveScriptConvictionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveScriptConvictionsRequest.ProtoReflect.Descriptor instead.
func (*GetActiveScriptConvictionsRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{22}
}

func (x *GetActiveScriptConvictionsRequest) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type GetActiveScriptConvictionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Convictions   []*Conviction          `protobuf:"bytes,1,rep,name=convictions,proto3" json:"convictions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetActiveScriptConvictionsResponse) Reset() {
	*x = GetActiveScriptConvictionsResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetActiveScriptConvictionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetActiveScriptConvictionsResponse) ProtoMessage() {}

func (x *GetActiveScriptConvictionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetActiveScriptConvictionsResponse.ProtoReflect.Descriptor instead.
func (*GetActiveScriptConvictionsResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{23}
}

func (x *GetActiveScriptConvictionsResponse) GetConvictions() []*Conviction {
	if x != nil {
		return x.Convictions
	}
	return nil
}

type PardonConvictionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PardonConvictionRequest) Reset() {
	*x = PardonConvictionRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PardonConvictionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PardonConvictionRequest) ProtoMessage() {}

func (x *PardonConvictionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PardonConvictionRequest.ProtoReflect.Descriptor instead.
func (*PardonConvictionRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{24}
}

func (x *PardonConvictionRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type PardonConvictionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PardonConvictionResponse) Reset() {
	*x = PardonConvictionResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PardonConvictionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PardonConvictionResponse) ProtoMessage() {}

func (x *PardonConvictionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PardonConvictionResponse.ProtoReflect.Descriptor instead.
func (*PardonConvictionResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{25}
}

type BanScriptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        string                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	BanDuration   int64                  `protobuf:"varint,2,opt,name=ban_duration,json=banDuration,proto3" json:"ban_duration,omitempty"` // 0 = permanent ban
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanScriptRequest) Reset() {
	*x = BanScriptRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanScriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanScriptRequest) ProtoMessage() {}

func (x *BanScriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanScriptRequest.ProtoReflect.Descriptor instead.
func (*BanScriptRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{26}
}

func (x *BanScriptRequest) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *BanScriptRequest) GetBanDuration() int64 {
	if x != nil {
		return x.BanDuration
	}
	return 0
}

func (x *BanScriptRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

type BanScriptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BanScriptResponse) Reset() {
	*x = BanScriptResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BanScriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BanScriptResponse) ProtoMessage() {}

func (x *BanScriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BanScriptResponse.ProtoReflect.Descriptor instead.
func (*BanScriptResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{27}
}

type RevokeAuthRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeAuthRequest) Reset() {
	*x = RevokeAuthRequest{}
	mi := &file_ark_v1_admin_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeAuthRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthRequest) ProtoMessage() {}

func (x *RevokeAuthRequest) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthRequest.ProtoReflect.Descriptor instead.
func (*RevokeAuthRequest) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{28}
}

func (x *RevokeAuthRequest) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type RevokeAuthResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Token         string                 `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RevokeAuthResponse) Reset() {
	*x = RevokeAuthResponse{}
	mi := &file_ark_v1_admin_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RevokeAuthResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RevokeAuthResponse) ProtoMessage() {}

func (x *RevokeAuthResponse) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RevokeAuthResponse.ProtoReflect.Descriptor instead.
func (*RevokeAuthResponse) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{29}
}

func (x *RevokeAuthResponse) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type SweepableOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount        string                 `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
	ScheduledAt   int64                  `protobuf:"varint,4,opt,name=scheduled_at,json=scheduledAt,proto3" json:"scheduled_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SweepableOutput) Reset() {
	*x = SweepableOutput{}
	mi := &file_ark_v1_admin_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SweepableOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SweepableOutput) ProtoMessage() {}

func (x *SweepableOutput) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SweepableOutput.ProtoReflect.Descriptor instead.
func (*SweepableOutput) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{30}
}

func (x *SweepableOutput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *SweepableOutput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *SweepableOutput) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *SweepableOutput) GetScheduledAt() int64 {
	if x != nil {
		return x.ScheduledAt
	}
	return 0
}

type ScheduledSweep struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RoundId       string                 `protobuf:"bytes,1,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Outputs       []*SweepableOutput     `protobuf:"bytes,2,rep,name=outputs,proto3" json:"outputs,omitempty"`
	Confirmed     bool                   `protobuf:"varint,3,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ScheduledSweep) Reset() {
	*x = ScheduledSweep{}
	mi := &file_ark_v1_admin_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledSweep) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledSweep) ProtoMessage() {}

func (x *ScheduledSweep) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledSweep.ProtoReflect.Descriptor instead.
func (*ScheduledSweep) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{31}
}

func (x *ScheduledSweep) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *ScheduledSweep) GetOutputs() []*SweepableOutput {
	if x != nil {
		return x.Outputs
	}
	return nil
}

func (x *ScheduledSweep) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

type ScheduledSessionConfig struct {
	state                     protoimpl.MessageState `protogen:"open.v1"`
	StartTime                 int64                  `protobuf:"varint,1,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`
	EndTime                   int64                  `protobuf:"varint,2,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`
	Period                    int64                  `protobuf:"varint,3,opt,name=period,proto3" json:"period,omitempty"`
	Duration                  int64                  `protobuf:"varint,4,opt,name=duration,proto3" json:"duration,omitempty"`
	RoundMinParticipantsCount int64                  `protobuf:"varint,5,opt,name=round_min_participants_count,json=roundMinParticipantsCount,proto3" json:"round_min_participants_count,omitempty"`
	RoundMaxParticipantsCount int64                  `protobuf:"varint,6,opt,name=round_max_participants_count,json=roundMaxParticipantsCount,proto3" json:"round_max_participants_count,omitempty"`
	Fees                      *FeeInfo               `protobuf:"bytes,7,opt,name=fees,proto3" json:"fees,omitempty"`
	unknownFields             protoimpl.UnknownFields
	sizeCache                 protoimpl.SizeCache
}

func (x *ScheduledSessionConfig) Reset() {
	*x = ScheduledSessionConfig{}
	mi := &file_ark_v1_admin_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ScheduledSessionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ScheduledSessionConfig) ProtoMessage() {}

func (x *ScheduledSessionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ScheduledSessionConfig.ProtoReflect.Descriptor instead.
func (*ScheduledSessionConfig) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{32}
}

func (x *ScheduledSessionConfig) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ScheduledSessionConfig) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ScheduledSessionConfig) GetPeriod() int64 {
	if x != nil {
		return x.Period
	}
	return 0
}

func (x *ScheduledSessionConfig) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *ScheduledSessionConfig) GetRoundMinParticipantsCount() int64 {
	if x != nil {
		return x.RoundMinParticipantsCount
	}
	return 0
}

func (x *ScheduledSessionConfig) GetRoundMaxParticipantsCount() int64 {
	if x != nil {
		return x.RoundMaxParticipantsCount
	}
	return 0
}

func (x *ScheduledSessionConfig) GetFees() *FeeInfo {
	if x != nil {
		return x.Fees
	}
	return nil
}

type IntentInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Amount        uint64                 `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IntentInput) Reset() {
	*x = IntentInput{}
	mi := &file_ark_v1_admin_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntentInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntentInput) ProtoMessage() {}

func (x *IntentInput) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntentInput.ProtoReflect.Descriptor instead.
func (*IntentInput) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{33}
}

func (x *IntentInput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *IntentInput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *IntentInput) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type IntentInfo struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Id                  string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt           int64                  `protobuf:"varint,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	Receivers           []*Output              `protobuf:"bytes,3,rep,name=receivers,proto3" json:"receivers,omitempty"`
	Inputs              []*IntentInput         `protobuf:"bytes,4,rep,name=inputs,proto3" json:"inputs,omitempty"`
	BoardingInputs      []*IntentInput         `protobuf:"bytes,5,rep,name=boarding_inputs,json=boardingInputs,proto3" json:"boarding_inputs,omitempty"`
	CosignersPublicKeys []string               `protobuf:"bytes,6,rep,name=cosigners_public_keys,json=cosignersPublicKeys,proto3" json:"cosigners_public_keys,omitempty"`
	Intent              *Intent                `protobuf:"bytes,7,opt,name=intent,proto3" json:"intent,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *IntentInfo) Reset() {
	*x = IntentInfo{}
	mi := &file_ark_v1_admin_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IntentInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IntentInfo) ProtoMessage() {}

func (x *IntentInfo) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IntentInfo.ProtoReflect.Descriptor instead.
func (*IntentInfo) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{34}
}

func (x *IntentInfo) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *IntentInfo) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *IntentInfo) GetReceivers() []*Output {
	if x != nil {
		return x.Receivers
	}
	return nil
}

func (x *IntentInfo) GetInputs() []*IntentInput {
	if x != nil {
		return x.Inputs
	}
	return nil
}

func (x *IntentInfo) GetBoardingInputs() []*IntentInput {
	if x != nil {
		return x.BoardingInputs
	}
	return nil
}

func (x *IntentInfo) GetCosignersPublicKeys() []string {
	if x != nil {
		return x.CosignersPublicKeys
	}
	return nil
}

func (x *IntentInfo) GetIntent() *Intent {
	if x != nil {
		return x.Intent
	}
	return nil
}

type Output struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Destination:
	//
	//	*Output_VtxoScript
	//	*Output_OnchainAddress
	Destination   isOutput_Destination `protobuf_oneof:"destination"`
	Amount        uint64               `protobuf:"varint,3,opt,name=amount,proto3" json:"amount,omitempty"` // Amount to send in satoshis.
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Output) Reset() {
	*x = Output{}
	mi := &file_ark_v1_admin_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Output) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Output) ProtoMessage() {}

func (x *Output) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Output.ProtoReflect.Descriptor instead.
func (*Output) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{35}
}

func (x *Output) GetDestination() isOutput_Destination {
	if x != nil {
		return x.Destination
	}
	return nil
}

func (x *Output) GetVtxoScript() string {
	if x != nil {
		if x, ok := x.Destination.(*Output_VtxoScript); ok {
			return x.VtxoScript
		}
	}
	return ""
}

func (x *Output) GetOnchainAddress() string {
	if x != nil {
		if x, ok := x.Destination.(*Output_OnchainAddress); ok {
			return x.OnchainAddress
		}
	}
	return ""
}

func (x *Output) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

type isOutput_Destination interface {
	isOutput_Destination()
}

type Output_VtxoScript struct {
	VtxoScript string `protobuf:"bytes,1,opt,name=vtxo_script,json=vtxoScript,proto3,oneof"`
}

type Output_OnchainAddress struct {
	OnchainAddress string `protobuf:"bytes,2,opt,name=onchain_address,json=onchainAddress,proto3,oneof"`
}

func (*Output_VtxoScript) isOutput_Destination() {}

func (*Output_OnchainAddress) isOutput_Destination() {}

type Conviction struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Type          ConvictionType         `protobuf:"varint,2,opt,name=type,proto3,enum=ark.v1.ConvictionType" json:"type,omitempty"`
	CreatedAt     int64                  `protobuf:"varint,3,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,4,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"` // 0 if never expires
	Pardoned      bool                   `protobuf:"varint,5,opt,name=pardoned,proto3" json:"pardoned,omitempty"`
	Script        string                 `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"` // Only set for script convictions
	CrimeType     CrimeType              `protobuf:"varint,7,opt,name=crime_type,json=crimeType,proto3,enum=ark.v1.CrimeType" json:"crime_type,omitempty"`
	RoundId       string                 `protobuf:"bytes,8,opt,name=round_id,json=roundId,proto3" json:"round_id,omitempty"`
	Reason        string                 `protobuf:"bytes,9,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Conviction) Reset() {
	*x = Conviction{}
	mi := &file_ark_v1_admin_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Conviction) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Conviction) ProtoMessage() {}

func (x *Conviction) ProtoReflect() protoreflect.Message {
	mi := &file_ark_v1_admin_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Conviction.ProtoReflect.Descriptor instead.
func (*Conviction) Descriptor() ([]byte, []int) {
	return file_ark_v1_admin_proto_rawDescGZIP(), []int{36}
}

func (x *Conviction) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Conviction) GetType() ConvictionType {
	if x != nil {
		return x.Type
	}
	return ConvictionType_CONVICTION_TYPE_UNSPECIFIED
}

func (x *Conviction) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Conviction) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

func (x *Conviction) GetPardoned() bool {
	if x != nil {
		return x.Pardoned
	}
	return false
}

func (x *Conviction) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *Conviction) GetCrimeType() CrimeType {
	if x != nil {
		return x.CrimeType
	}
	return CrimeType_CRIME_TYPE_UNSPECIFIED
}

func (x *Conviction) GetRoundId() string {
	if x != nil {
		return x.RoundId
	}
	return ""
}

func (x *Conviction) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

var File_ark_v1_admin_proto protoreflect.FileDescriptor

const file_ark_v1_admin_proto_rawDesc = "" +
	"\n" +
	"\x12ark/v1/admin.proto\x12\x06ark.v1\x1a!meshapi/gateway/annotations.proto\x1a\x12ark/v1/types.proto\"\x1a\n" +
	"\x18GetScheduledSweepRequest\"K\n" +
	"\x19GetScheduledSweepResponse\x12.\n" +
	"\x06sweeps\x18\x01 \x03(\v2\x16.ark.v1.ScheduledSweepR\x06sweeps\"3\n" +
	"\x16GetRoundDetailsRequest\x12\x19\n" +
	"\bround_id\x18\x01 \x01(\tR\aroundId\"\xb5\x03\n" +
	"\x17GetRoundDetailsResponse\x12\x19\n" +
	"\bround_id\x18\x01 \x01(\tR\aroundId\x12\x1d\n" +
	"\n" +
	"started_at\x18\x02 \x01(\x03R\tstartedAt\x12\x19\n" +
	"\bended_at\x18\x03 \x01(\x03R\aendedAt\x12'\n" +
	"\x0fcommitment_txid\x18\x04 \x01(\tR\x0ecommitmentTxid\x12)\n" +
	"\x10forfeited_amount\x18\x05 \x01(\tR\x0fforfeitedAmount\x12,\n" +
	"\x12total_vtxos_amount\x18\x06 \x01(\tR\x10totalVtxosAmount\x12*\n" +
	"\x11total_exit_amount\x18\a \x01(\tR\x0ftotalExitAmount\x12(\n" +
	"\x10total_fee_amount\x18\b \x01(\tR\x0etotalFeeAmount\x12!\n" +
	"\finputs_vtxos\x18\t \x03(\tR\vinputsVtxos\x12#\n" +
	"\routputs_vtxos\x18\n" +
	" \x03(\tR\foutputsVtxos\x12%\n" +
	"\x0eexit_addresses\x18\v \x03(\tR\rexitAddresses\"@\n" +
	"\x10GetRoundsRequest\x12\x14\n" +
	"\x05after\x18\x01 \x01(\x03R\x05after\x12\x16\n" +
	"\x06before\x18\x02 \x01(\x03R\x06before\"+\n" +
	"\x11GetRoundsResponse\x12\x16\n" +
	"\x06rounds\x18\x01 \x03(\tR\x06rounds\"G\n" +
	"\x11CreateNoteRequest\x12\x16\n" +
	"\x06amount\x18\x01 \x01(\rR\x06amount\x12\x1a\n" +
	"\bquantity\x18\x02 \x01(\rR\bquantity\"*\n" +
	"\x12CreateNoteResponse\x12\x14\n" +
	"\x05notes\x18\x01 \x03(\tR\x05notes\"\"\n" +
	" GetScheduledSessionConfigRequest\"[\n" +
	"!GetScheduledSessionConfigResponse\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.ark.v1.ScheduledSessionConfigR\x06config\"]\n" +
	"#UpdateScheduledSessionConfigRequest\x126\n" +
	"\x06config\x18\x01 \x01(\v2\x1e.ark.v1.ScheduledSessionConfigR\x06config\"&\n" +
	"$UpdateScheduledSessionConfigResponse\"3\n" +
	"\x12ListIntentsRequest\x12\x1d\n" +
	"\n" +
	"intent_ids\x18\x01 \x03(\tR\tintentIds\"C\n" +
	"\x13ListIntentsResponse\x12,\n" +
	"\aintents\x18\x01 \x03(\v2\x12.ark.v1.IntentInfoR\aintents\"5\n" +
	"\x14DeleteIntentsRequest\x12\x1d\n" +
	"\n" +
	"intent_ids\x18\x01 \x03(\tR\tintentIds\"\x17\n" +
	"\x15DeleteIntentsResponse\")\n" +
	"\x15GetConvictionsRequest\x12\x10\n" +
	"\x03ids\x18\x01 \x03(\tR\x03ids\"N\n" +
	"\x16GetConvictionsResponse\x124\n" +
	"\vconvictions\x18\x01 \x03(\v2\x12.ark.v1.ConvictionR\vconvictions\"B\n" +
	"\x1cGetConvictionsInRangeRequest\x12\x12\n" +
	"\x04from\x18\x01 \x01(\x03R\x04from\x12\x0e\n" +
	"\x02to\x18\x02 \x01(\x03R\x02to\"U\n" +
	"\x1dGetConvictionsInRangeResponse\x124\n" +
	"\vconvictions\x18\x01 \x03(\v2\x12.ark.v1.ConvictionR\vconvictions\"9\n" +
	"\x1cGetConvictionsByRoundRequest\x12\x19\n" +
	"\bround_id\x18\x01 \x01(\tR\aroundId\"U\n" +
	"\x1dGetConvictionsByRoundResponse\x124\n" +
	"\vconvictions\x18\x01 \x03(\v2\x12.ark.v1.ConvictionR\vconvictions\";\n" +
	"!GetActiveScriptConvictionsRequest\x12\x16\n" +
	"\x06script\x18\x01 \x01(\tR\x06script\"Z\n" +
	"\"GetActiveScriptConvictionsResponse\x124\n" +
	"\vconvictions\x18\x01 \x03(\v2\x12.ark.v1.ConvictionR\vconvictions\")\n" +
	"\x17PardonConvictionRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x1a\n" +
	"\x18PardonConvictionResponse\"e\n" +
	"\x10BanScriptRequest\x12\x16\n" +
	"\x06script\x18\x01 \x01(\tR\x06script\x12!\n" +
	"\fban_duration\x18\x02 \x01(\x03R\vbanDuration\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"\x13\n" +
	"\x11BanScriptResponse\")\n" +
	"\x11RevokeAuthRequest\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"*\n" +
	"\x12RevokeAuthResponse\x12\x14\n" +
	"\x05token\x18\x01 \x01(\tR\x05token\"t\n" +
	"\x0fSweepableOutput\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\tR\x06amount\x12!\n" +
	"\fscheduled_at\x18\x04 \x01(\x03R\vscheduledAt\"|\n" +
	"\x0eScheduledSweep\x12\x19\n" +
	"\bround_id\x18\x01 \x01(\tR\aroundId\x121\n" +
	"\aoutputs\x18\x02 \x03(\v2\x17.ark.v1.SweepableOutputR\aoutputs\x12\x1c\n" +
	"\tconfirmed\x18\x03 \x01(\bR\tconfirmed\"\xad\x02\n" +
	"\x16ScheduledSessionConfig\x12\x1d\n" +
	"\n" +
	"start_time\x18\x01 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\x02 \x01(\x03R\aendTime\x12\x16\n" +
	"\x06period\x18\x03 \x01(\x03R\x06period\x12\x1a\n" +
	"\bduration\x18\x04 \x01(\x03R\bduration\x12?\n" +
	"\x1cround_min_participants_count\x18\x05 \x01(\x03R\x19roundMinParticipantsCount\x12?\n" +
	"\x1cround_max_participants_count\x18\x06 \x01(\x03R\x19roundMaxParticipantsCount\x12#\n" +
	"\x04fees\x18\a \x01(\v2\x0f.ark.v1.FeeInfoR\x04fees\"M\n" +
	"\vIntentInput\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x04R\x06amount\"\xb0\x02\n" +
	"\n" +
	"IntentInfo\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1d\n" +
	"\n" +
	"created_at\x18\x02 \x01(\x03R\tcreatedAt\x12,\n" +
	"\treceivers\x18\x03 \x03(\v2\x0e.ark.v1.OutputR\treceivers\x12+\n" +
	"\x06inputs\x18\x04 \x03(\v2\x13.ark.v1.IntentInputR\x06inputs\x12<\n" +
	"\x0fboarding_inputs\x18\x05 \x03(\v2\x13.ark.v1.IntentInputR\x0eboardingInputs\x122\n" +
	"\x15cosigners_public_keys\x18\x06 \x03(\tR\x13cosignersPublicKeys\x12&\n" +
	"\x06intent\x18\a \x01(\v2\x0e.ark.v1.IntentR\x06intent\"}\n" +
	"\x06Output\x12!\n" +
	"\vvtxo_script\x18\x01 \x01(\tH\x00R\n" +
	"vtxoScript\x12)\n" +
	"\x0fonchain_address\x18\x02 \x01(\tH\x00R\x0eonchainAddress\x12\x16\n" +
	"\x06amount\x18\x03 \x01(\x04R\x06amountB\r\n" +
	"\vdestination\"\x9f\x02\n" +
	"\n" +
	"Conviction\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12*\n" +
	"\x04type\x18\x02 \x01(\x0e2\x16.ark.v1.ConvictionTypeR\x04type\x12\x1d\n" +
	"\n" +
	"created_at\x18\x03 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\x04 \x01(\x03R\texpiresAt\x12\x1a\n" +
	"\bpardoned\x18\x05 \x01(\bR\bpardoned\x12\x16\n" +
	"\x06script\x18\x06 \x01(\tR\x06script\x120\n" +
	"\n" +
	"crime_type\x18\a \x01(\x0e2\x11.ark.v1.CrimeTypeR\tcrimeType\x12\x19\n" +
	"\bround_id\x18\b \x01(\tR\aroundId\x12\x16\n" +
	"\x06reason\x18\t \x01(\tR\x06reason*\xb6\x02\n" +
	"\tCrimeType\x12\x1a\n" +
	"\x16CRIME_TYPE_UNSPECIFIED\x10\x00\x12&\n" +
	"\"CRIME_TYPE_MUSIG2_NONCE_SUBMISSION\x10\x01\x12*\n" +
	"&CRIME_TYPE_MUSIG2_SIGNATURE_SUBMISSION\x10\x02\x12'\n" +
	"#CRIME_TYPE_MUSIG2_INVALID_SIGNATURE\x10\x03\x12!\n" +
	"\x1dCRIME_TYPE_FORFEIT_SUBMISSION\x10\x04\x12(\n" +
	"$CRIME_TYPE_FORFEIT_INVALID_SIGNATURE\x10\x05\x12(\n" +
	"$CRIME_TYPE_BOARDING_INPUT_SUBMISSION\x10\x06\x12\x19\n" +
	"\x15CRIME_TYPE_MANUAL_BAN\x10\a*M\n" +
	"\x0eConvictionType\x12\x1f\n" +
	"\x1bCONVICTION_TYPE_UNSPECIFIED\x10\x00\x12\x1a\n" +
	"\x16CONVICTION_TYPE_SCRIPT\x10\x012\xae\x0e\n" +
	"\fAdminService\x12o\n" +
	"\x11GetScheduledSweep\x12 .ark.v1.GetScheduledSweepRequest\x1a!.ark.v1.GetScheduledSweepResponse\"\x15\xb2J\x12\x12\x10/v1/admin/sweeps\x12s\n" +
	"\x0fGetRoundDetails\x12\x1e.ark.v1.GetRoundDetailsRequest\x1a\x1f.ark.v1.GetRoundDetailsResponse\"\x1f\xb2J\x1c\x12\x1a/v1/admin/round/{round_id}\x12W\n" +
	"\tGetRounds\x12\x18.ark.v1.GetRoundsRequest\x1a\x19.ark.v1.GetRoundsResponse\"\x15\xb2J\x12\x12\x10/v1/admin/rounds\x12[\n" +
	"\n" +
	"CreateNote\x12\x19.ark.v1.CreateNoteRequest\x1a\x1a.ark.v1.CreateNoteResponse\"\x16\xb2J\x13B\x01*\"\x0e/v1/admin/note\x12\x91\x01\n" +
	"\x19GetScheduledSessionConfig\x12(.ark.v1.GetScheduledSessionConfigRequest\x1a).ark.v1.GetScheduledSessionConfigResponse\"\x1f\xb2J\x1c\x12\x1a/v1/admin/scheduledSession\x12\x9d\x01\n" +
	"\x1cUpdateScheduledSessionConfig\x12+.ark.v1.UpdateScheduledSessionConfigRequest\x1a,.ark.v1.UpdateScheduledSessionConfigResponse\"\"\xb2J\x1fB\x01*\"\x1a/v1/admin/scheduledSession\x12^\n" +
	"\vListIntents\x12\x1a.ark.v1.ListIntentsRequest\x1a\x1b.ark.v1.ListIntentsResponse\"\x16\xb2J\x13\x12\x11/v1/admin/intents\x12n\n" +
	"\rDeleteIntents\x12\x1c.ark.v1.DeleteIntentsRequest\x1a\x1d.ark.v1.DeleteIntentsResponse\" \xb2J\x1dB\x01*\"\x18/v1/admin/intents/delete\x12q\n" +
	"\x0eGetConvictions\x12\x1d.ark.v1.GetConvictionsRequest\x1a\x1e.ark.v1.GetConvictionsResponse\" \xb2J\x1d\x12\x1b/v1/admin/convictions/{ids}\x12\x87\x01\n" +
	"\x15GetConvictionsInRange\x12$.ark.v1.GetConvictionsInRangeRequest\x1a%.ark.v1.GetConvictionsInRangeResponse\"!\xb2J\x1e\x12\x1c/v1/admin/convictionsInRange\x12\x92\x01\n" +
	"\x15GetConvictionsByRound\x12$.ark.v1.GetConvictionsByRoundRequest\x1a%.ark.v1.GetConvictionsByRoundResponse\",\xb2J)\x12'/v1/admin/convictionsByRound/{round_id}\x12\xa0\x01\n" +
	"\x1aGetActiveScriptConvictions\x12).ark.v1.GetActiveScriptConvictionsRequest\x1a*.ark.v1.GetActiveScriptConvictionsResponse\"+\xb2J(\x12&/v1/admin/convictionsByScript/{script}\x12\x80\x01\n" +
	"\x10PardonConviction\x12\x1f.ark.v1.PardonConvictionRequest\x1a .ark.v1.PardonConvictionResponse\")\xb2J&B\x01*\"!/v1/admin/convictions/{id}/pardon\x12b\n" +
	"\tBanScript\x12\x18.ark.v1.BanScriptRequest\x1a\x19.ark.v1.BanScriptResponse\" \xb2J\x1dB\x01*\"\x18/v1/admin/conviction/ban\x12b\n" +
	"\n" +
	"RevokeAuth\x12\x19.ark.v1.RevokeAuthRequest\x1a\x1a.ark.v1.RevokeAuthResponse\"\x1d\xb2J\x1aB\x01*\"\x15/v1/admin/auth/revokeBy\n" +
	"\n" +
	"com.ark.v1B\n" +
	"AdminProtoP\x01Z&github.com/arkade-os/arkd/ark/v1;arkv1\xa2\x02\x03AXX\xaa\x02\x06Ark.V1\xca\x02\x06Ark\\V1\xe2\x02\x12Ark\\V1\\GPBMetadata\xea\x02\aArk::V1b\x06proto3"

var (
	file_ark_v1_admin_proto_rawDescOnce sync.Once
	file_ark_v1_admin_proto_rawDescData []byte
)

func file_ark_v1_admin_proto_rawDescGZIP() []byte {
	file_ark_v1_admin_proto_rawDescOnce.Do(func() {
		file_ark_v1_admin_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_ark_v1_admin_proto_rawDesc), len(file_ark_v1_admin_proto_rawDesc)))
	})
	return file_ark_v1_admin_proto_rawDescData
}

var file_ark_v1_admin_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_ark_v1_admin_proto_msgTypes = make([]protoimpl.MessageInfo, 37)
var file_ark_v1_admin_proto_goTypes = []any{
	(CrimeType)(0),                               // 0: ark.v1.CrimeType
	(ConvictionType)(0),                          // 1: ark.v1.ConvictionType
	(*GetScheduledSweepRequest)(nil),             // 2: ark.v1.GetScheduledSweepRequest
	(*GetScheduledSweepResponse)(nil),            // 3: ark.v1.GetScheduledSweepResponse
	(*GetRoundDetailsRequest)(nil),               // 4: ark.v1.GetRoundDetailsRequest
	(*GetRoundDetailsResponse)(nil),              // 5: ark.v1.GetRoundDetailsResponse
	(*GetRoundsRequest)(nil),                     // 6: ark.v1.GetRoundsRequest
	(*GetRoundsResponse)(nil),                    // 7: ark.v1.GetRoundsResponse
	(*CreateNoteRequest)(nil),                    // 8: ark.v1.CreateNoteRequest
	(*CreateNoteResponse)(nil),                   // 9: ark.v1.CreateNoteResponse
	(*GetScheduledSessionConfigRequest)(nil),     // 10: ark.v1.GetScheduledSessionConfigRequest
	(*GetScheduledSessionConfigResponse)(nil),    // 11: ark.v1.GetScheduledSessionConfigResponse
	(*UpdateScheduledSessionConfigRequest)(nil),  // 12: ark.v1.UpdateScheduledSessionConfigRequest
	(*UpdateScheduledSessionConfigResponse)(nil), // 13: ark.v1.UpdateScheduledSessionConfigResponse
	(*ListIntentsRequest)(nil),                   // 14: ark.v1.ListIntentsRequest
	(*ListIntentsResponse)(nil),                  // 15: ark.v1.ListIntentsResponse
	(*DeleteIntentsRequest)(nil),                 // 16: ark.v1.DeleteIntentsRequest
	(*DeleteIntentsResponse)(nil),                // 17: ark.v1.DeleteIntentsResponse
	(*GetConvictionsRequest)(nil),                // 18: ark.v1.GetConvictionsRequest
	(*GetConvictionsResponse)(nil),               // 19: ark.v1.GetConvictionsResponse
	(*GetConvictionsInRangeRequest)(nil),         // 20: ark.v1.GetConvictionsInRangeRequest
	(*GetConvictionsInRangeResponse)(nil),        // 21: ark.v1.GetConvictionsInRangeResponse
	(*GetConvictionsByRoundRequest)(nil),         // 22: ark.v1.GetConvictionsByRoundRequest
	(*GetConvictionsByRoundResponse)(nil),        // 23: ark.v1.GetConvictionsByRoundResponse
	(*GetActiveScriptConvictionsRequest)(nil),    // 24: ark.v1.GetActiveScriptConvictionsRequest
	(*GetActiveScriptConvictionsResponse)(nil),   // 25: ark.v1.GetActiveScriptConvictionsResponse
	(*PardonConvictionRequest)(nil),              // 26: ark.v1.PardonConvictionRequest
	(*PardonConvictionResponse)(nil),             // 27: ark.v1.PardonConvictionResponse
	(*BanScriptRequest)(nil),                     // 28: ark.v1.BanScriptRequest
	(*BanScriptResponse)(nil),                    // 29: ark.v1.BanScriptResponse
	(*RevokeAuthRequest)(nil),                    // 30: ark.v1.RevokeAuthRequest
	(*RevokeAuthResponse)(nil),                   // 31: ark.v1.RevokeAuthResponse
	(*SweepableOutput)(nil),                      // 32: ark.v1.SweepableOutput
	(*ScheduledSweep)(nil),                       // 33: ark.v1.ScheduledSweep
	(*ScheduledSessionConfig)(nil),               // 34: ark.v1.ScheduledSessionConfig
	(*IntentInput)(nil),                          // 35: ark.v1.IntentInput
	(*IntentInfo)(nil),                           // 36: ark.v1.IntentInfo
	(*Output)(nil),                               // 37: ark.v1.Output
	(*Conviction)(nil),                           // 38: ark.v1.Conviction
	(*FeeInfo)(nil),                              // 39: ark.v1.FeeInfo
	(*Intent)(nil),                               // 40: ark.v1.Intent
}
var file_ark_v1_admin_proto_depIdxs = []int32{
	33, // 0: ark.v1.GetScheduledSweepResponse.sweeps:type_name -> ark.v1.ScheduledSweep
	34, // 1: ark.v1.GetScheduledSessionConfigResponse.config:type_name -> ark.v1.ScheduledSessionConfig
	34, // 2: ark.v1.UpdateScheduledSessionConfigRequest.config:type_name -> ark.v1.ScheduledSessionConfig
	36, // 3: ark.v1.ListIntentsResponse.intents:type_name -> ark.v1.IntentInfo
	38, // 4: ark.v1.GetConvictionsResponse.convictions:type_name -> ark.v1.Conviction
	38, // 5: ark.v1.GetConvictionsInRangeResponse.convictions:type_name -> ark.v1.Conviction
	38, // 6: ark.v1.GetConvictionsByRoundResponse.convictions:type_name -> ark.v1.Conviction
	38, // 7: ark.v1.GetActiveScriptConvictionsResponse.convictions:type_name -> ark.v1.Conviction
	32, // 8: ark.v1.ScheduledSweep.outputs:type_name -> ark.v1.SweepableOutput
	39, // 9: ark.v1.ScheduledSessionConfig.fees:type_name -> ark.v1.FeeInfo
	37, // 10: ark.v1.IntentInfo.receivers:type_name -> ark.v1.Output
	35, // 11: ark.v1.IntentInfo.inputs:type_name -> ark.v1.IntentInput
	35, // 12: ark.v1.IntentInfo.boarding_inputs:type_name -> ark.v1.IntentInput
	40, // 13: ark.v1.IntentInfo.intent:type_name -> ark.v1.Intent
	1,  // 14: ark.v1.Conviction.type:type_name -> ark.v1.ConvictionType
	0,  // 15: ark.v1.Conviction.crime_type:type_name -> ark.v1.CrimeType
	2,  // 16: ark.v1.AdminService.GetScheduledSweep:input_type -> ark.v1.GetScheduledSweepRequest
	4,  // 17: ark.v1.AdminService.GetRoundDetails:input_type -> ark.v1.GetRoundDetailsRequest
	6,  // 18: ark.v1.AdminService.GetRounds:input_type -> ark.v1.GetRoundsRequest
	8,  // 19: ark.v1.AdminService.CreateNote:input_type -> ark.v1.CreateNoteRequest
	10, // 20: ark.v1.AdminService.GetScheduledSessionConfig:input_type -> ark.v1.GetScheduledSessionConfigRequest
	12, // 21: ark.v1.AdminService.UpdateScheduledSessionConfig:input_type -> ark.v1.UpdateScheduledSessionConfigRequest
	14, // 22: ark.v1.AdminService.ListIntents:input_type -> ark.v1.ListIntentsRequest
	16, // 23: ark.v1.AdminService.DeleteIntents:input_type -> ark.v1.DeleteIntentsRequest
	18, // 24: ark.v1.AdminService.GetConvictions:input_type -> ark.v1.GetConvictionsRequest
	20, // 25: ark.v1.AdminService.GetConvictionsInRange:input_type -> ark.v1.GetConvictionsInRangeRequest
	22, // 26: ark.v1.AdminService.GetConvictionsByRound:input_type -> ark.v1.GetConvictionsByRoundRequest
	24, // 27: ark.v1.AdminService.GetActiveScriptConvictions:input_type -> ark.v1.GetActiveScriptConvictionsRequest
	26, // 28: ark.v1.AdminService.PardonConviction:input_type -> ark.v1.PardonConvictionRequest
	28, // 29: ark.v1.AdminService.BanScript:input_type -> ark.v1.BanScriptRequest
	30, // 30: ark.v1.AdminService.RevokeAuth:input_type -> ark.v1.RevokeAuthRequest
	3,  // 31: ark.v1.AdminService.GetScheduledSweep:output_type -> ark.v1.GetScheduledSweepResponse
	5,  // 32: ark.v1.AdminService.GetRoundDetails:output_type -> ark.v1.GetRoundDetailsResponse
	7,  // 33: ark.v1.AdminService.GetRounds:output_type -> ark.v1.GetRoundsResponse
	9,  // 34: ark.v1.AdminService.CreateNote:output_type -> ark.v1.CreateNoteResponse
	11, // 35: ark.v1.AdminService.GetScheduledSessionConfig:output_type -> ark.v1.GetScheduledSessionConfigResponse
	13, // 36: ark.v1.AdminService.UpdateScheduledSessionConfig:output_type -> ark.v1.UpdateScheduledSessionConfigResponse
	15, // 37: ark.v1.AdminService.ListIntents:output_type -> ark.v1.ListIntentsResponse
	17, // 38: ark.v1.AdminService.DeleteIntents:output_type -> ark.v1.DeleteIntentsResponse
	19, // 39: ark.v1.AdminService.GetConvictions:output_type -> ark.v1.GetConvictionsResponse
	21, // 40: ark.v1.AdminService.GetConvictionsInRange:output_type -> ark.v1.GetConvictionsInRangeResponse
	23, // 41: ark.v1.AdminService.GetConvictionsByRound:output_type -> ark.v1.GetConvictionsByRoundResponse
	25, // 42: ark.v1.AdminService.GetActiveScriptConvictions:output_type -> ark.v1.GetActiveScriptConvictionsResponse
	27, // 43: ark.v1.AdminService.PardonConviction:output_type -> ark.v1.PardonConvictionResponse
	29, // 44: ark.v1.AdminService.BanScript:output_type -> ark.v1.BanScriptResponse
	31, // 45: ark.v1.AdminService.RevokeAuth:output_type -> ark.v1.RevokeAuthResponse
	31, // [31:46] is the sub-list for method output_type
	16, // [16:31] is the sub-list for method input_type
	16, // [16:16] is the sub-list for extension type_name
	16, // [16:16] is the sub-list for extension extendee
	0,  // [0:16] is the sub-list for field type_name
}

func init() { file_ark_v1_admin_proto_init() }
func file_ark_v1_admin_proto_init() {
	if File_ark_v1_admin_proto != nil {
		return
	}
	file_ark_v1_types_proto_init()
	file_ark_v1_admin_proto_msgTypes[35].OneofWrappers = []any{
		(*Output_VtxoScript)(nil),
		(*Output_OnchainAddress)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_ark_v1_admin_proto_rawDesc), len(file_ark_v1_admin_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   37,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_ark_v1_admin_proto_goTypes,
		DependencyIndexes: file_ark_v1_admin_proto_depIdxs,
		EnumInfos:         file_ark_v1_admin_proto_enumTypes,
		MessageInfos:      file_ark_v1_admin_proto_msgTypes,
	}.Build()
	File_ark_v1_admin_proto = out.File
	file_ark_v1_admin_proto_goTypes = nil
	file_ark_v1_admin_proto_depIdxs = nil
}
