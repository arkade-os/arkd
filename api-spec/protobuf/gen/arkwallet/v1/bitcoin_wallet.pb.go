// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        (unknown)
// source: arkwallet/v1/bitcoin_wallet.proto

package arkwalletv1

import (
	_ "github.com/meshapi/grpc-api-gateway/api"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetReadyUpdateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadyUpdateRequest) Reset() {
	*x = GetReadyUpdateRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadyUpdateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadyUpdateRequest) ProtoMessage() {}

func (x *GetReadyUpdateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadyUpdateRequest.ProtoReflect.Descriptor instead.
func (*GetReadyUpdateRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{0}
}

type GetReadyUpdateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Ready         bool                   `protobuf:"varint,1,opt,name=ready,proto3" json:"ready,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetReadyUpdateResponse) Reset() {
	*x = GetReadyUpdateResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetReadyUpdateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetReadyUpdateResponse) ProtoMessage() {}

func (x *GetReadyUpdateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetReadyUpdateResponse.ProtoReflect.Descriptor instead.
func (*GetReadyUpdateResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{1}
}

func (x *GetReadyUpdateResponse) GetReady() bool {
	if x != nil {
		return x.Ready
	}
	return false
}

type IsTransactionConfirmedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsTransactionConfirmedRequest) Reset() {
	*x = IsTransactionConfirmedRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsTransactionConfirmedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTransactionConfirmedRequest) ProtoMessage() {}

func (x *IsTransactionConfirmedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsTransactionConfirmedRequest.ProtoReflect.Descriptor instead.
func (*IsTransactionConfirmedRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{2}
}

func (x *IsTransactionConfirmedRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type IsTransactionConfirmedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirmed     bool                   `protobuf:"varint,1,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Blocknumber   int64                  `protobuf:"varint,2,opt,name=blocknumber,proto3" json:"blocknumber,omitempty"`
	Blocktime     int64                  `protobuf:"varint,3,opt,name=blocktime,proto3" json:"blocktime,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IsTransactionConfirmedResponse) Reset() {
	*x = IsTransactionConfirmedResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IsTransactionConfirmedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IsTransactionConfirmedResponse) ProtoMessage() {}

func (x *IsTransactionConfirmedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IsTransactionConfirmedResponse.ProtoReflect.Descriptor instead.
func (*IsTransactionConfirmedResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{3}
}

func (x *IsTransactionConfirmedResponse) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *IsTransactionConfirmedResponse) GetBlocknumber() int64 {
	if x != nil {
		return x.Blocknumber
	}
	return 0
}

func (x *IsTransactionConfirmedResponse) GetBlocktime() int64 {
	if x != nil {
		return x.Blocktime
	}
	return 0
}

type GetOutpointStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOutpointStatusRequest) Reset() {
	*x = GetOutpointStatusRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOutpointStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutpointStatusRequest) ProtoMessage() {}

func (x *GetOutpointStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutpointStatusRequest.ProtoReflect.Descriptor instead.
func (*GetOutpointStatusRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{4}
}

func (x *GetOutpointStatusRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *GetOutpointStatusRequest) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

type GetOutpointStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spent         bool                   `protobuf:"varint,1,opt,name=spent,proto3" json:"spent,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetOutpointStatusResponse) Reset() {
	*x = GetOutpointStatusResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetOutpointStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetOutpointStatusResponse) ProtoMessage() {}

func (x *GetOutpointStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetOutpointStatusResponse.ProtoReflect.Descriptor instead.
func (*GetOutpointStatusResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{5}
}

func (x *GetOutpointStatusResponse) GetSpent() bool {
	if x != nil {
		return x.Spent
	}
	return false
}

type NotificationStreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationStreamRequest) Reset() {
	*x = NotificationStreamRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationStreamRequest) ProtoMessage() {}

func (x *NotificationStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationStreamRequest.ProtoReflect.Descriptor instead.
func (*NotificationStreamRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{6}
}

type NotificationStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Entries       []*VtoxsPerScript      `protobuf:"bytes,1,rep,name=entries,proto3" json:"entries,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *NotificationStreamResponse) Reset() {
	*x = NotificationStreamResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *NotificationStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NotificationStreamResponse) ProtoMessage() {}

func (x *NotificationStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NotificationStreamResponse.ProtoReflect.Descriptor instead.
func (*NotificationStreamResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{7}
}

func (x *NotificationStreamResponse) GetEntries() []*VtoxsPerScript {
	if x != nil {
		return x.Entries
	}
	return nil
}

type VtoxsPerScript struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        string                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"` // hex-encoded script
	Vtxos         []*VtxoWithKey         `protobuf:"bytes,2,rep,name=vtxos,proto3" json:"vtxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VtoxsPerScript) Reset() {
	*x = VtoxsPerScript{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VtoxsPerScript) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VtoxsPerScript) ProtoMessage() {}

func (x *VtoxsPerScript) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VtoxsPerScript.ProtoReflect.Descriptor instead.
func (*VtoxsPerScript) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{8}
}

func (x *VtoxsPerScript) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *VtoxsPerScript) GetVtxos() []*VtxoWithKey {
	if x != nil {
		return x.Vtxos
	}
	return nil
}

type VtxoWithKey struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Value         uint64                 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VtxoWithKey) Reset() {
	*x = VtxoWithKey{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VtxoWithKey) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VtxoWithKey) ProtoMessage() {}

func (x *VtxoWithKey) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VtxoWithKey.ProtoReflect.Descriptor instead.
func (*VtxoWithKey) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{9}
}

func (x *VtxoWithKey) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *VtxoWithKey) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *VtxoWithKey) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type GenSeedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenSeedRequest) Reset() {
	*x = GenSeedRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenSeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenSeedRequest) ProtoMessage() {}

func (x *GenSeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenSeedRequest.ProtoReflect.Descriptor instead.
func (*GenSeedRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{10}
}

type GenSeedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seed          string                 `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GenSeedResponse) Reset() {
	*x = GenSeedResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GenSeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GenSeedResponse) ProtoMessage() {}

func (x *GenSeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GenSeedResponse.ProtoReflect.Descriptor instead.
func (*GenSeedResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{11}
}

func (x *GenSeedResponse) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

type CreateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seed          string                 `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateRequest) Reset() {
	*x = CreateRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateRequest) ProtoMessage() {}

func (x *CreateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateRequest.ProtoReflect.Descriptor instead.
func (*CreateRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{12}
}

func (x *CreateRequest) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *CreateRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type CreateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateResponse) Reset() {
	*x = CreateResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateResponse) ProtoMessage() {}

func (x *CreateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateResponse.ProtoReflect.Descriptor instead.
func (*CreateResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{13}
}

type RestoreRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Seed          string                 `protobuf:"bytes,1,opt,name=seed,proto3" json:"seed,omitempty"`
	Password      string                 `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreRequest) Reset() {
	*x = RestoreRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreRequest) ProtoMessage() {}

func (x *RestoreRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreRequest.ProtoReflect.Descriptor instead.
func (*RestoreRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{14}
}

func (x *RestoreRequest) GetSeed() string {
	if x != nil {
		return x.Seed
	}
	return ""
}

func (x *RestoreRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RestoreResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RestoreResponse) Reset() {
	*x = RestoreResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RestoreResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RestoreResponse) ProtoMessage() {}

func (x *RestoreResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RestoreResponse.ProtoReflect.Descriptor instead.
func (*RestoreResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{15}
}

type UnlockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Password      string                 `protobuf:"bytes,1,opt,name=password,proto3" json:"password,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockRequest) Reset() {
	*x = UnlockRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockRequest) ProtoMessage() {}

func (x *UnlockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockRequest.ProtoReflect.Descriptor instead.
func (*UnlockRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{16}
}

func (x *UnlockRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type UnlockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnlockResponse) Reset() {
	*x = UnlockResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnlockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnlockResponse) ProtoMessage() {}

func (x *UnlockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnlockResponse.ProtoReflect.Descriptor instead.
func (*UnlockResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{17}
}

type LockRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockRequest) Reset() {
	*x = LockRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockRequest) ProtoMessage() {}

func (x *LockRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockRequest.ProtoReflect.Descriptor instead.
func (*LockRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{18}
}

type LockResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockResponse) Reset() {
	*x = LockResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockResponse) ProtoMessage() {}

func (x *LockResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockResponse.ProtoReflect.Descriptor instead.
func (*LockResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{19}
}

type StatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusRequest) Reset() {
	*x = StatusRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusRequest) ProtoMessage() {}

func (x *StatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusRequest.ProtoReflect.Descriptor instead.
func (*StatusRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{20}
}

type StatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Initialized   bool                   `protobuf:"varint,1,opt,name=initialized,proto3" json:"initialized,omitempty"`
	Unlocked      bool                   `protobuf:"varint,2,opt,name=unlocked,proto3" json:"unlocked,omitempty"`
	Synced        bool                   `protobuf:"varint,3,opt,name=synced,proto3" json:"synced,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StatusResponse) Reset() {
	*x = StatusResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatusResponse) ProtoMessage() {}

func (x *StatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatusResponse.ProtoReflect.Descriptor instead.
func (*StatusResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{21}
}

func (x *StatusResponse) GetInitialized() bool {
	if x != nil {
		return x.Initialized
	}
	return false
}

func (x *StatusResponse) GetUnlocked() bool {
	if x != nil {
		return x.Unlocked
	}
	return false
}

func (x *StatusResponse) GetSynced() bool {
	if x != nil {
		return x.Synced
	}
	return false
}

type GetNetworkRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkRequest) Reset() {
	*x = GetNetworkRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkRequest) ProtoMessage() {}

func (x *GetNetworkRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkRequest.ProtoReflect.Descriptor instead.
func (*GetNetworkRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{22}
}

type GetNetworkResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Network       string                 `protobuf:"bytes,1,opt,name=network,proto3" json:"network,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNetworkResponse) Reset() {
	*x = GetNetworkResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNetworkResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNetworkResponse) ProtoMessage() {}

func (x *GetNetworkResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNetworkResponse.ProtoReflect.Descriptor instead.
func (*GetNetworkResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{23}
}

func (x *GetNetworkResponse) GetNetwork() string {
	if x != nil {
		return x.Network
	}
	return ""
}

type GetForfeitPubkeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForfeitPubkeyRequest) Reset() {
	*x = GetForfeitPubkeyRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForfeitPubkeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitPubkeyRequest) ProtoMessage() {}

func (x *GetForfeitPubkeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitPubkeyRequest.ProtoReflect.Descriptor instead.
func (*GetForfeitPubkeyRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{24}
}

type GetForfeitPubkeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Pubkey        string                 `protobuf:"bytes,1,opt,name=pubkey,proto3" json:"pubkey,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetForfeitPubkeyResponse) Reset() {
	*x = GetForfeitPubkeyResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetForfeitPubkeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetForfeitPubkeyResponse) ProtoMessage() {}

func (x *GetForfeitPubkeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetForfeitPubkeyResponse.ProtoReflect.Descriptor instead.
func (*GetForfeitPubkeyResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{25}
}

func (x *GetForfeitPubkeyResponse) GetPubkey() string {
	if x != nil {
		return x.Pubkey
	}
	return ""
}

type DeriveConnectorAddressRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeriveConnectorAddressRequest) Reset() {
	*x = DeriveConnectorAddressRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeriveConnectorAddressRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveConnectorAddressRequest) ProtoMessage() {}

func (x *DeriveConnectorAddressRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveConnectorAddressRequest.ProtoReflect.Descriptor instead.
func (*DeriveConnectorAddressRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{26}
}

type DeriveConnectorAddressResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeriveConnectorAddressResponse) Reset() {
	*x = DeriveConnectorAddressResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeriveConnectorAddressResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveConnectorAddressResponse) ProtoMessage() {}

func (x *DeriveConnectorAddressResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveConnectorAddressResponse.ProtoReflect.Descriptor instead.
func (*DeriveConnectorAddressResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{27}
}

func (x *DeriveConnectorAddressResponse) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type DeriveAddressesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Num           int32                  `protobuf:"varint,1,opt,name=num,proto3" json:"num,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeriveAddressesRequest) Reset() {
	*x = DeriveAddressesRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeriveAddressesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveAddressesRequest) ProtoMessage() {}

func (x *DeriveAddressesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveAddressesRequest.ProtoReflect.Descriptor instead.
func (*DeriveAddressesRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{28}
}

func (x *DeriveAddressesRequest) GetNum() int32 {
	if x != nil {
		return x.Num
	}
	return 0
}

type DeriveAddressesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Addresses     []string               `protobuf:"bytes,1,rep,name=addresses,proto3" json:"addresses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeriveAddressesResponse) Reset() {
	*x = DeriveAddressesResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeriveAddressesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeriveAddressesResponse) ProtoMessage() {}

func (x *DeriveAddressesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeriveAddressesResponse.ProtoReflect.Descriptor instead.
func (*DeriveAddressesResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{29}
}

func (x *DeriveAddressesResponse) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type SignTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartialTx     string                 `protobuf:"bytes,1,opt,name=partial_tx,json=partialTx,proto3" json:"partial_tx,omitempty"`
	ExtractRawTx  bool                   `protobuf:"varint,2,opt,name=extract_raw_tx,json=extractRawTx,proto3" json:"extract_raw_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTransactionRequest) Reset() {
	*x = SignTransactionRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionRequest) ProtoMessage() {}

func (x *SignTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionRequest.ProtoReflect.Descriptor instead.
func (*SignTransactionRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{30}
}

func (x *SignTransactionRequest) GetPartialTx() string {
	if x != nil {
		return x.PartialTx
	}
	return ""
}

func (x *SignTransactionRequest) GetExtractRawTx() bool {
	if x != nil {
		return x.ExtractRawTx
	}
	return false
}

type SignTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedTx      string                 `protobuf:"bytes,1,opt,name=signed_tx,json=signedTx,proto3" json:"signed_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTransactionResponse) Reset() {
	*x = SignTransactionResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionResponse) ProtoMessage() {}

func (x *SignTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionResponse.ProtoReflect.Descriptor instead.
func (*SignTransactionResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{31}
}

func (x *SignTransactionResponse) GetSignedTx() string {
	if x != nil {
		return x.SignedTx
	}
	return ""
}

type SignTransactionTapscriptRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PartialTx     string                 `protobuf:"bytes,1,opt,name=partial_tx,json=partialTx,proto3" json:"partial_tx,omitempty"`
	InputIndexes  []int32                `protobuf:"varint,2,rep,packed,name=input_indexes,json=inputIndexes,proto3" json:"input_indexes,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTransactionTapscriptRequest) Reset() {
	*x = SignTransactionTapscriptRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTransactionTapscriptRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionTapscriptRequest) ProtoMessage() {}

func (x *SignTransactionTapscriptRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionTapscriptRequest.ProtoReflect.Descriptor instead.
func (*SignTransactionTapscriptRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{32}
}

func (x *SignTransactionTapscriptRequest) GetPartialTx() string {
	if x != nil {
		return x.PartialTx
	}
	return ""
}

func (x *SignTransactionTapscriptRequest) GetInputIndexes() []int32 {
	if x != nil {
		return x.InputIndexes
	}
	return nil
}

type SignTransactionTapscriptResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SignedTx      string                 `protobuf:"bytes,1,opt,name=signed_tx,json=signedTx,proto3" json:"signed_tx,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignTransactionTapscriptResponse) Reset() {
	*x = SignTransactionTapscriptResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignTransactionTapscriptResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignTransactionTapscriptResponse) ProtoMessage() {}

func (x *SignTransactionTapscriptResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignTransactionTapscriptResponse.ProtoReflect.Descriptor instead.
func (*SignTransactionTapscriptResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{33}
}

func (x *SignTransactionTapscriptResponse) GetSignedTx() string {
	if x != nil {
		return x.SignedTx
	}
	return ""
}

type SelectUtxosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Asset         string                 `protobuf:"bytes,1,opt,name=asset,proto3" json:"asset,omitempty"`
	Amount        uint64                 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	ConfirmedOnly bool                   `protobuf:"varint,3,opt,name=confirmed_only,json=confirmedOnly,proto3" json:"confirmed_only,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectUtxosRequest) Reset() {
	*x = SelectUtxosRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectUtxosRequest) ProtoMessage() {}

func (x *SelectUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectUtxosRequest.ProtoReflect.Descriptor instead.
func (*SelectUtxosRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{34}
}

func (x *SelectUtxosRequest) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *SelectUtxosRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *SelectUtxosRequest) GetConfirmedOnly() bool {
	if x != nil {
		return x.ConfirmedOnly
	}
	return false
}

type SelectUtxosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Utxos         []*TxInput             `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	TotalAmount   uint64                 `protobuf:"varint,2,opt,name=total_amount,json=totalAmount,proto3" json:"total_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SelectUtxosResponse) Reset() {
	*x = SelectUtxosResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SelectUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SelectUtxosResponse) ProtoMessage() {}

func (x *SelectUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SelectUtxosResponse.ProtoReflect.Descriptor instead.
func (*SelectUtxosResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{35}
}

func (x *SelectUtxosResponse) GetUtxos() []*TxInput {
	if x != nil {
		return x.Utxos
	}
	return nil
}

func (x *SelectUtxosResponse) GetTotalAmount() uint64 {
	if x != nil {
		return x.TotalAmount
	}
	return 0
}

type BroadcastTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txs           []string               `protobuf:"bytes,1,rep,name=txs,proto3" json:"txs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastTransactionRequest) Reset() {
	*x = BroadcastTransactionRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTransactionRequest) ProtoMessage() {}

func (x *BroadcastTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTransactionRequest.ProtoReflect.Descriptor instead.
func (*BroadcastTransactionRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{36}
}

func (x *BroadcastTransactionRequest) GetTxs() []string {
	if x != nil {
		return x.Txs
	}
	return nil
}

type BroadcastTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BroadcastTransactionResponse) Reset() {
	*x = BroadcastTransactionResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BroadcastTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BroadcastTransactionResponse) ProtoMessage() {}

func (x *BroadcastTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BroadcastTransactionResponse.ProtoReflect.Descriptor instead.
func (*BroadcastTransactionResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{37}
}

func (x *BroadcastTransactionResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type WaitForSyncRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitForSyncRequest) Reset() {
	*x = WaitForSyncRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForSyncRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForSyncRequest) ProtoMessage() {}

func (x *WaitForSyncRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForSyncRequest.ProtoReflect.Descriptor instead.
func (*WaitForSyncRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{38}
}

func (x *WaitForSyncRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type WaitForSyncResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WaitForSyncResponse) Reset() {
	*x = WaitForSyncResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WaitForSyncResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WaitForSyncResponse) ProtoMessage() {}

func (x *WaitForSyncResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WaitForSyncResponse.ProtoReflect.Descriptor instead.
func (*WaitForSyncResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{39}
}

type EstimateFeesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Psbt          string                 `protobuf:"bytes,1,opt,name=psbt,proto3" json:"psbt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateFeesRequest) Reset() {
	*x = EstimateFeesRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateFeesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateFeesRequest) ProtoMessage() {}

func (x *EstimateFeesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateFeesRequest.ProtoReflect.Descriptor instead.
func (*EstimateFeesRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{40}
}

func (x *EstimateFeesRequest) GetPsbt() string {
	if x != nil {
		return x.Psbt
	}
	return ""
}

type EstimateFeesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Fee           uint64                 `protobuf:"varint,1,opt,name=fee,proto3" json:"fee,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EstimateFeesResponse) Reset() {
	*x = EstimateFeesResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[41]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EstimateFeesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateFeesResponse) ProtoMessage() {}

func (x *EstimateFeesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[41]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateFeesResponse.ProtoReflect.Descriptor instead.
func (*EstimateFeesResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{41}
}

func (x *EstimateFeesResponse) GetFee() uint64 {
	if x != nil {
		return x.Fee
	}
	return 0
}

type FeeRateRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeeRateRequest) Reset() {
	*x = FeeRateRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[42]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeeRateRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeRateRequest) ProtoMessage() {}

func (x *FeeRateRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[42]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeRateRequest.ProtoReflect.Descriptor instead.
func (*FeeRateRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{42}
}

type FeeRateResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SatPerKvbyte  uint64                 `protobuf:"varint,1,opt,name=sat_per_kvbyte,json=satPerKvbyte,proto3" json:"sat_per_kvbyte,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeeRateResponse) Reset() {
	*x = FeeRateResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[43]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeeRateResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeeRateResponse) ProtoMessage() {}

func (x *FeeRateResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[43]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeeRateResponse.ProtoReflect.Descriptor instead.
func (*FeeRateResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{43}
}

func (x *FeeRateResponse) GetSatPerKvbyte() uint64 {
	if x != nil {
		return x.SatPerKvbyte
	}
	return 0
}

type ListConnectorUtxosRequest struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	ConnectorAddress string                 `protobuf:"bytes,1,opt,name=connector_address,json=connectorAddress,proto3" json:"connector_address,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ListConnectorUtxosRequest) Reset() {
	*x = ListConnectorUtxosRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[44]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectorUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorUtxosRequest) ProtoMessage() {}

func (x *ListConnectorUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[44]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorUtxosRequest.ProtoReflect.Descriptor instead.
func (*ListConnectorUtxosRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{44}
}

func (x *ListConnectorUtxosRequest) GetConnectorAddress() string {
	if x != nil {
		return x.ConnectorAddress
	}
	return ""
}

type ListConnectorUtxosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Utxos         []*TxInput             `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListConnectorUtxosResponse) Reset() {
	*x = ListConnectorUtxosResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[45]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListConnectorUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListConnectorUtxosResponse) ProtoMessage() {}

func (x *ListConnectorUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[45]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListConnectorUtxosResponse.ProtoReflect.Descriptor instead.
func (*ListConnectorUtxosResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{45}
}

func (x *ListConnectorUtxosResponse) GetUtxos() []*TxInput {
	if x != nil {
		return x.Utxos
	}
	return nil
}

type MainAccountBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MainAccountBalanceRequest) Reset() {
	*x = MainAccountBalanceRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[46]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MainAccountBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainAccountBalanceRequest) ProtoMessage() {}

func (x *MainAccountBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[46]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainAccountBalanceRequest.ProtoReflect.Descriptor instead.
func (*MainAccountBalanceRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{46}
}

type MainAccountBalanceResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// TODO rename to available and locked
	Confirmed     uint64 `protobuf:"varint,1,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Unconfirmed   uint64 `protobuf:"varint,2,opt,name=unconfirmed,proto3" json:"unconfirmed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MainAccountBalanceResponse) Reset() {
	*x = MainAccountBalanceResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[47]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MainAccountBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MainAccountBalanceResponse) ProtoMessage() {}

func (x *MainAccountBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[47]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MainAccountBalanceResponse.ProtoReflect.Descriptor instead.
func (*MainAccountBalanceResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{47}
}

func (x *MainAccountBalanceResponse) GetConfirmed() uint64 {
	if x != nil {
		return x.Confirmed
	}
	return 0
}

func (x *MainAccountBalanceResponse) GetUnconfirmed() uint64 {
	if x != nil {
		return x.Unconfirmed
	}
	return 0
}

type ConnectorsAccountBalanceRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectorsAccountBalanceRequest) Reset() {
	*x = ConnectorsAccountBalanceRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[48]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectorsAccountBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorsAccountBalanceRequest) ProtoMessage() {}

func (x *ConnectorsAccountBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[48]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorsAccountBalanceRequest.ProtoReflect.Descriptor instead.
func (*ConnectorsAccountBalanceRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{48}
}

type ConnectorsAccountBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirmed     uint64                 `protobuf:"varint,1,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	Unconfirmed   uint64                 `protobuf:"varint,2,opt,name=unconfirmed,proto3" json:"unconfirmed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ConnectorsAccountBalanceResponse) Reset() {
	*x = ConnectorsAccountBalanceResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[49]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConnectorsAccountBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConnectorsAccountBalanceResponse) ProtoMessage() {}

func (x *ConnectorsAccountBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[49]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConnectorsAccountBalanceResponse.ProtoReflect.Descriptor instead.
func (*ConnectorsAccountBalanceResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{49}
}

func (x *ConnectorsAccountBalanceResponse) GetConfirmed() uint64 {
	if x != nil {
		return x.Confirmed
	}
	return 0
}

func (x *ConnectorsAccountBalanceResponse) GetUnconfirmed() uint64 {
	if x != nil {
		return x.Unconfirmed
	}
	return 0
}

type LockConnectorUtxosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Utxos         []*TxOutpoint          `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockConnectorUtxosRequest) Reset() {
	*x = LockConnectorUtxosRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[50]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockConnectorUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockConnectorUtxosRequest) ProtoMessage() {}

func (x *LockConnectorUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[50]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockConnectorUtxosRequest.ProtoReflect.Descriptor instead.
func (*LockConnectorUtxosRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{50}
}

func (x *LockConnectorUtxosRequest) GetUtxos() []*TxOutpoint {
	if x != nil {
		return x.Utxos
	}
	return nil
}

type LockConnectorUtxosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LockConnectorUtxosResponse) Reset() {
	*x = LockConnectorUtxosResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[51]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LockConnectorUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LockConnectorUtxosResponse) ProtoMessage() {}

func (x *LockConnectorUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[51]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LockConnectorUtxosResponse.ProtoReflect.Descriptor instead.
func (*LockConnectorUtxosResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{51}
}

type GetDustAmountRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDustAmountRequest) Reset() {
	*x = GetDustAmountRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[52]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDustAmountRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDustAmountRequest) ProtoMessage() {}

func (x *GetDustAmountRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[52]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDustAmountRequest.ProtoReflect.Descriptor instead.
func (*GetDustAmountRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{52}
}

type GetDustAmountResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DustAmount    uint64                 `protobuf:"varint,1,opt,name=dust_amount,json=dustAmount,proto3" json:"dust_amount,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDustAmountResponse) Reset() {
	*x = GetDustAmountResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[53]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDustAmountResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDustAmountResponse) ProtoMessage() {}

func (x *GetDustAmountResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[53]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDustAmountResponse.ProtoReflect.Descriptor instead.
func (*GetDustAmountResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{53}
}

func (x *GetDustAmountResponse) GetDustAmount() uint64 {
	if x != nil {
		return x.DustAmount
	}
	return 0
}

type WatchScriptsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scripts       []string               `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	Addresses     []string               `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"` // Optional Bitcoin addresses to watch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchScriptsRequest) Reset() {
	*x = WatchScriptsRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[54]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchScriptsRequest) ProtoMessage() {}

func (x *WatchScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[54]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchScriptsRequest.ProtoReflect.Descriptor instead.
func (*WatchScriptsRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{54}
}

func (x *WatchScriptsRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *WatchScriptsRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type WatchScriptsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WatchScriptsResponse) Reset() {
	*x = WatchScriptsResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[55]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WatchScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WatchScriptsResponse) ProtoMessage() {}

func (x *WatchScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[55]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WatchScriptsResponse.ProtoReflect.Descriptor instead.
func (*WatchScriptsResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{55}
}

type UnwatchScriptsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Scripts       []string               `protobuf:"bytes,1,rep,name=scripts,proto3" json:"scripts,omitempty"`
	Addresses     []string               `protobuf:"bytes,2,rep,name=addresses,proto3" json:"addresses,omitempty"` // Optional Bitcoin addresses to unwatch
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnwatchScriptsRequest) Reset() {
	*x = UnwatchScriptsRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[56]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnwatchScriptsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwatchScriptsRequest) ProtoMessage() {}

func (x *UnwatchScriptsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[56]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwatchScriptsRequest.ProtoReflect.Descriptor instead.
func (*UnwatchScriptsRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{56}
}

func (x *UnwatchScriptsRequest) GetScripts() []string {
	if x != nil {
		return x.Scripts
	}
	return nil
}

func (x *UnwatchScriptsRequest) GetAddresses() []string {
	if x != nil {
		return x.Addresses
	}
	return nil
}

type UnwatchScriptsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnwatchScriptsResponse) Reset() {
	*x = UnwatchScriptsResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[57]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnwatchScriptsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnwatchScriptsResponse) ProtoMessage() {}

func (x *UnwatchScriptsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[57]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnwatchScriptsResponse.ProtoReflect.Descriptor instead.
func (*UnwatchScriptsResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{57}
}

type GetTransactionRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionRequest) Reset() {
	*x = GetTransactionRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[58]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionRequest) ProtoMessage() {}

func (x *GetTransactionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[58]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{58}
}

func (x *GetTransactionRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetTransactionResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TxHex         string                 `protobuf:"bytes,1,opt,name=tx_hex,json=txHex,proto3" json:"tx_hex,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionResponse) Reset() {
	*x = GetTransactionResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[59]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionResponse) ProtoMessage() {}

func (x *GetTransactionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[59]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{59}
}

func (x *GetTransactionResponse) GetTxHex() string {
	if x != nil {
		return x.TxHex
	}
	return ""
}

type SignMessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       []byte                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageRequest) Reset() {
	*x = SignMessageRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[60]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageRequest) ProtoMessage() {}

func (x *SignMessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[60]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageRequest.ProtoReflect.Descriptor instead.
func (*SignMessageRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{60}
}

func (x *SignMessageRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

type SignMessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Signature     []byte                 `protobuf:"bytes,1,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SignMessageResponse) Reset() {
	*x = SignMessageResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[61]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SignMessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SignMessageResponse) ProtoMessage() {}

func (x *SignMessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[61]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SignMessageResponse.ProtoReflect.Descriptor instead.
func (*SignMessageResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{61}
}

func (x *SignMessageResponse) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VerifyMessageSignatureRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       []byte                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Signature     []byte                 `protobuf:"bytes,2,opt,name=signature,proto3" json:"signature,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMessageSignatureRequest) Reset() {
	*x = VerifyMessageSignatureRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[62]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMessageSignatureRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageSignatureRequest) ProtoMessage() {}

func (x *VerifyMessageSignatureRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[62]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageSignatureRequest.ProtoReflect.Descriptor instead.
func (*VerifyMessageSignatureRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{62}
}

func (x *VerifyMessageSignatureRequest) GetMessage() []byte {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *VerifyMessageSignatureRequest) GetSignature() []byte {
	if x != nil {
		return x.Signature
	}
	return nil
}

type VerifyMessageSignatureResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Valid         bool                   `protobuf:"varint,1,opt,name=valid,proto3" json:"valid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VerifyMessageSignatureResponse) Reset() {
	*x = VerifyMessageSignatureResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[63]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VerifyMessageSignatureResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyMessageSignatureResponse) ProtoMessage() {}

func (x *VerifyMessageSignatureResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[63]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyMessageSignatureResponse.ProtoReflect.Descriptor instead.
func (*VerifyMessageSignatureResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{63}
}

func (x *VerifyMessageSignatureResponse) GetValid() bool {
	if x != nil {
		return x.Valid
	}
	return false
}

type GetCurrentBlockTimeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentBlockTimeRequest) Reset() {
	*x = GetCurrentBlockTimeRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[64]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentBlockTimeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentBlockTimeRequest) ProtoMessage() {}

func (x *GetCurrentBlockTimeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[64]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentBlockTimeRequest.ProtoReflect.Descriptor instead.
func (*GetCurrentBlockTimeRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{64}
}

type GetCurrentBlockTimeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     *BlockTimestamp        `protobuf:"bytes,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetCurrentBlockTimeResponse) Reset() {
	*x = GetCurrentBlockTimeResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[65]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCurrentBlockTimeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCurrentBlockTimeResponse) ProtoMessage() {}

func (x *GetCurrentBlockTimeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[65]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCurrentBlockTimeResponse.ProtoReflect.Descriptor instead.
func (*GetCurrentBlockTimeResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{65}
}

func (x *GetCurrentBlockTimeResponse) GetTimestamp() *BlockTimestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type WithdrawRequest struct {
	state   protoimpl.MessageState `protogen:"open.v1"`
	Address string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Amount  uint64                 `protobuf:"varint,2,opt,name=amount,proto3" json:"amount,omitempty"`
	// if all=true, amount is ignored and all available balance is withdrawn including connectors account funds
	// must be used carefully to not make connectors utxos unspendable, making forfeit txs invalid
	All           bool `protobuf:"varint,3,opt,name=all,proto3" json:"all,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawRequest) Reset() {
	*x = WithdrawRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[66]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawRequest) ProtoMessage() {}

func (x *WithdrawRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[66]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawRequest.ProtoReflect.Descriptor instead.
func (*WithdrawRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{66}
}

func (x *WithdrawRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *WithdrawRequest) GetAmount() uint64 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *WithdrawRequest) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

type WithdrawResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WithdrawResponse) Reset() {
	*x = WithdrawResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[67]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WithdrawResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawResponse) ProtoMessage() {}

func (x *WithdrawResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[67]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawResponse.ProtoReflect.Descriptor instead.
func (*WithdrawResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{67}
}

func (x *WithdrawResponse) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type LoadSignerKeyRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PrivateKey    string                 `protobuf:"bytes,1,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSignerKeyRequest) Reset() {
	*x = LoadSignerKeyRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[68]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSignerKeyRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSignerKeyRequest) ProtoMessage() {}

func (x *LoadSignerKeyRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[68]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSignerKeyRequest.ProtoReflect.Descriptor instead.
func (*LoadSignerKeyRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{68}
}

func (x *LoadSignerKeyRequest) GetPrivateKey() string {
	if x != nil {
		return x.PrivateKey
	}
	return ""
}

type LoadSignerKeyResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LoadSignerKeyResponse) Reset() {
	*x = LoadSignerKeyResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[69]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoadSignerKeyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadSignerKeyResponse) ProtoMessage() {}

func (x *LoadSignerKeyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[69]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadSignerKeyResponse.ProtoReflect.Descriptor instead.
func (*LoadSignerKeyResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{69}
}

type TxInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	Script        string                 `protobuf:"bytes,3,opt,name=script,proto3" json:"script,omitempty"`
	Value         uint64                 `protobuf:"varint,4,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxInput) Reset() {
	*x = TxInput{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[70]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxInput) ProtoMessage() {}

func (x *TxInput) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[70]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxInput.ProtoReflect.Descriptor instead.
func (*TxInput) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{70}
}

func (x *TxInput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TxInput) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

func (x *TxInput) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *TxInput) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type TxOutpoint struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Index         uint32                 `protobuf:"varint,2,opt,name=index,proto3" json:"index,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TxOutpoint) Reset() {
	*x = TxOutpoint{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[71]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TxOutpoint) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TxOutpoint) ProtoMessage() {}

func (x *TxOutpoint) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[71]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TxOutpoint.ProtoReflect.Descriptor instead.
func (*TxOutpoint) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{71}
}

func (x *TxOutpoint) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *TxOutpoint) GetIndex() uint32 {
	if x != nil {
		return x.Index
	}
	return 0
}

type BlockTimestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Height        uint32                 `protobuf:"varint,1,opt,name=height,proto3" json:"height,omitempty"`
	Time          int64                  `protobuf:"varint,2,opt,name=time,proto3" json:"time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *BlockTimestamp) Reset() {
	*x = BlockTimestamp{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[72]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *BlockTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BlockTimestamp) ProtoMessage() {}

func (x *BlockTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[72]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BlockTimestamp.ProtoReflect.Descriptor instead.
func (*BlockTimestamp) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{72}
}

func (x *BlockTimestamp) GetHeight() uint32 {
	if x != nil {
		return x.Height
	}
	return 0
}

func (x *BlockTimestamp) GetTime() int64 {
	if x != nil {
		return x.Time
	}
	return 0
}

// Explorer
type GetTransactionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsRequest) Reset() {
	*x = GetTransactionsRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[73]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsRequest) ProtoMessage() {}

func (x *GetTransactionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[73]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsRequest.ProtoReflect.Descriptor instead.
func (*GetTransactionsRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{73}
}

func (x *GetTransactionsRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetTransactionsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Transactions  []*ExplorerTx          `protobuf:"bytes,1,rep,name=transactions,proto3" json:"transactions,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTransactionsResponse) Reset() {
	*x = GetTransactionsResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[74]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTransactionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransactionsResponse) ProtoMessage() {}

func (x *GetTransactionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[74]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransactionsResponse.ProtoReflect.Descriptor instead.
func (*GetTransactionsResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{74}
}

func (x *GetTransactionsResponse) GetTransactions() []*ExplorerTx {
	if x != nil {
		return x.Transactions
	}
	return nil
}

type GetTxOutspendsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTxOutspendsRequest) Reset() {
	*x = GetTxOutspendsRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[75]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTxOutspendsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxOutspendsRequest) ProtoMessage() {}

func (x *GetTxOutspendsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[75]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxOutspendsRequest.ProtoReflect.Descriptor instead.
func (*GetTxOutspendsRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{75}
}

func (x *GetTxOutspendsRequest) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

type GetTxOutspendsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Outspends     []*SpentStatus         `protobuf:"bytes,1,rep,name=outspends,proto3" json:"outspends,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetTxOutspendsResponse) Reset() {
	*x = GetTxOutspendsResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[76]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetTxOutspendsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTxOutspendsResponse) ProtoMessage() {}

func (x *GetTxOutspendsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[76]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTxOutspendsResponse.ProtoReflect.Descriptor instead.
func (*GetTxOutspendsResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{76}
}

func (x *GetTxOutspendsResponse) GetOutspends() []*SpentStatus {
	if x != nil {
		return x.Outspends
	}
	return nil
}

type GetUtxosRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUtxosRequest) Reset() {
	*x = GetUtxosRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[77]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUtxosRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUtxosRequest) ProtoMessage() {}

func (x *GetUtxosRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[77]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUtxosRequest.ProtoReflect.Descriptor instead.
func (*GetUtxosRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{77}
}

func (x *GetUtxosRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

type GetUtxosResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Utxos         []*ExplorerUtxo        `protobuf:"bytes,1,rep,name=utxos,proto3" json:"utxos,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetUtxosResponse) Reset() {
	*x = GetUtxosResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[78]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUtxosResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUtxosResponse) ProtoMessage() {}

func (x *GetUtxosResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[78]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUtxosResponse.ProtoReflect.Descriptor instead.
func (*GetUtxosResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{78}
}

func (x *GetUtxosResponse) GetUtxos() []*ExplorerUtxo {
	if x != nil {
		return x.Utxos
	}
	return nil
}

type GetRedeemedVtxosBalanceRequest struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	Address             string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	UnilateralExitDelay uint32                 `protobuf:"varint,2,opt,name=unilateral_exit_delay,json=unilateralExitDelay,proto3" json:"unilateral_exit_delay,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *GetRedeemedVtxosBalanceRequest) Reset() {
	*x = GetRedeemedVtxosBalanceRequest{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[79]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRedeemedVtxosBalanceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedeemedVtxosBalanceRequest) ProtoMessage() {}

func (x *GetRedeemedVtxosBalanceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[79]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedeemedVtxosBalanceRequest.ProtoReflect.Descriptor instead.
func (*GetRedeemedVtxosBalanceRequest) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{79}
}

func (x *GetRedeemedVtxosBalanceRequest) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *GetRedeemedVtxosBalanceRequest) GetUnilateralExitDelay() uint32 {
	if x != nil {
		return x.UnilateralExitDelay
	}
	return 0
}

type GetRedeemedVtxosBalanceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Balance       uint64                 `protobuf:"varint,1,opt,name=balance,proto3" json:"balance,omitempty"`
	BalanceByTime map[int64]uint64       `protobuf:"bytes,2,rep,name=balance_by_time,json=balanceByTime,proto3" json:"balance_by_time,omitempty" protobuf_key:"varint,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetRedeemedVtxosBalanceResponse) Reset() {
	*x = GetRedeemedVtxosBalanceResponse{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[80]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetRedeemedVtxosBalanceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRedeemedVtxosBalanceResponse) ProtoMessage() {}

func (x *GetRedeemedVtxosBalanceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[80]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRedeemedVtxosBalanceResponse.ProtoReflect.Descriptor instead.
func (*GetRedeemedVtxosBalanceResponse) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{80}
}

func (x *GetRedeemedVtxosBalanceResponse) GetBalance() uint64 {
	if x != nil {
		return x.Balance
	}
	return 0
}

func (x *GetRedeemedVtxosBalanceResponse) GetBalanceByTime() map[int64]uint64 {
	if x != nil {
		return x.BalanceByTime
	}
	return nil
}

type ExplorerTx struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vin           []*ExplorerTxInput     `protobuf:"bytes,2,rep,name=vin,proto3" json:"vin,omitempty"`
	Vout          []*ExplorerTxOutput    `protobuf:"bytes,3,rep,name=vout,proto3" json:"vout,omitempty"`
	Status        *ExplorerTxStatus      `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerTx) Reset() {
	*x = ExplorerTx{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[81]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerTx) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerTx) ProtoMessage() {}

func (x *ExplorerTx) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[81]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerTx.ProtoReflect.Descriptor instead.
func (*ExplorerTx) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{81}
}

func (x *ExplorerTx) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ExplorerTx) GetVin() []*ExplorerTxInput {
	if x != nil {
		return x.Vin
	}
	return nil
}

func (x *ExplorerTx) GetVout() []*ExplorerTxOutput {
	if x != nil {
		return x.Vout
	}
	return nil
}

func (x *ExplorerTx) GetStatus() *ExplorerTxStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

type ExplorerTxInput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Prevout       *ExplorerTxPrevout     `protobuf:"bytes,3,opt,name=prevout,proto3" json:"prevout,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerTxInput) Reset() {
	*x = ExplorerTxInput{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[82]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerTxInput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerTxInput) ProtoMessage() {}

func (x *ExplorerTxInput) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[82]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerTxInput.ProtoReflect.Descriptor instead.
func (*ExplorerTxInput) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{82}
}

func (x *ExplorerTxInput) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ExplorerTxInput) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *ExplorerTxInput) GetPrevout() *ExplorerTxPrevout {
	if x != nil {
		return x.Prevout
	}
	return nil
}

type ExplorerTxOutput struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Script        string                 `protobuf:"bytes,1,opt,name=script,proto3" json:"script,omitempty"`
	Address       string                 `protobuf:"bytes,2,opt,name=address,proto3" json:"address,omitempty"`
	Value         uint64                 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerTxOutput) Reset() {
	*x = ExplorerTxOutput{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[83]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerTxOutput) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerTxOutput) ProtoMessage() {}

func (x *ExplorerTxOutput) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[83]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerTxOutput.ProtoReflect.Descriptor instead.
func (*ExplorerTxOutput) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{83}
}

func (x *ExplorerTxOutput) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

func (x *ExplorerTxOutput) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExplorerTxOutput) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ExplorerTxPrevout struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Address       string                 `protobuf:"bytes,1,opt,name=address,proto3" json:"address,omitempty"`
	Value         uint64                 `protobuf:"varint,2,opt,name=value,proto3" json:"value,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerTxPrevout) Reset() {
	*x = ExplorerTxPrevout{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[84]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerTxPrevout) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerTxPrevout) ProtoMessage() {}

func (x *ExplorerTxPrevout) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[84]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerTxPrevout.ProtoReflect.Descriptor instead.
func (*ExplorerTxPrevout) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{84}
}

func (x *ExplorerTxPrevout) GetAddress() string {
	if x != nil {
		return x.Address
	}
	return ""
}

func (x *ExplorerTxPrevout) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

type ExplorerTxStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirmed     bool                   `protobuf:"varint,1,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	BlockTime     int64                  `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerTxStatus) Reset() {
	*x = ExplorerTxStatus{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[85]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerTxStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerTxStatus) ProtoMessage() {}

func (x *ExplorerTxStatus) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[85]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerTxStatus.ProtoReflect.Descriptor instead.
func (*ExplorerTxStatus) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{85}
}

func (x *ExplorerTxStatus) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *ExplorerTxStatus) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

type SpentStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Spent         bool                   `protobuf:"varint,1,opt,name=spent,proto3" json:"spent,omitempty"`
	SpentBy       string                 `protobuf:"bytes,2,opt,name=spent_by,json=spentBy,proto3" json:"spent_by,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpentStatus) Reset() {
	*x = SpentStatus{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[86]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpentStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpentStatus) ProtoMessage() {}

func (x *SpentStatus) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[86]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpentStatus.ProtoReflect.Descriptor instead.
func (*SpentStatus) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{86}
}

func (x *SpentStatus) GetSpent() bool {
	if x != nil {
		return x.Spent
	}
	return false
}

func (x *SpentStatus) GetSpentBy() string {
	if x != nil {
		return x.SpentBy
	}
	return ""
}

type ExplorerUtxo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Txid          string                 `protobuf:"bytes,1,opt,name=txid,proto3" json:"txid,omitempty"`
	Vout          uint32                 `protobuf:"varint,2,opt,name=vout,proto3" json:"vout,omitempty"`
	Value         uint64                 `protobuf:"varint,3,opt,name=value,proto3" json:"value,omitempty"`
	Asset         string                 `protobuf:"bytes,4,opt,name=asset,proto3" json:"asset,omitempty"`
	Status        *ExplorerUtxoStatus    `protobuf:"bytes,5,opt,name=status,proto3" json:"status,omitempty"`
	Script        string                 `protobuf:"bytes,6,opt,name=script,proto3" json:"script,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerUtxo) Reset() {
	*x = ExplorerUtxo{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[87]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerUtxo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerUtxo) ProtoMessage() {}

func (x *ExplorerUtxo) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[87]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerUtxo.ProtoReflect.Descriptor instead.
func (*ExplorerUtxo) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{87}
}

func (x *ExplorerUtxo) GetTxid() string {
	if x != nil {
		return x.Txid
	}
	return ""
}

func (x *ExplorerUtxo) GetVout() uint32 {
	if x != nil {
		return x.Vout
	}
	return 0
}

func (x *ExplorerUtxo) GetValue() uint64 {
	if x != nil {
		return x.Value
	}
	return 0
}

func (x *ExplorerUtxo) GetAsset() string {
	if x != nil {
		return x.Asset
	}
	return ""
}

func (x *ExplorerUtxo) GetStatus() *ExplorerUtxoStatus {
	if x != nil {
		return x.Status
	}
	return nil
}

func (x *ExplorerUtxo) GetScript() string {
	if x != nil {
		return x.Script
	}
	return ""
}

type ExplorerUtxoStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Confirmed     bool                   `protobuf:"varint,1,opt,name=confirmed,proto3" json:"confirmed,omitempty"`
	BlockTime     int64                  `protobuf:"varint,2,opt,name=block_time,json=blockTime,proto3" json:"block_time,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ExplorerUtxoStatus) Reset() {
	*x = ExplorerUtxoStatus{}
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[88]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ExplorerUtxoStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExplorerUtxoStatus) ProtoMessage() {}

func (x *ExplorerUtxoStatus) ProtoReflect() protoreflect.Message {
	mi := &file_arkwallet_v1_bitcoin_wallet_proto_msgTypes[88]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExplorerUtxoStatus.ProtoReflect.Descriptor instead.
func (*ExplorerUtxoStatus) Descriptor() ([]byte, []int) {
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP(), []int{88}
}

func (x *ExplorerUtxoStatus) GetConfirmed() bool {
	if x != nil {
		return x.Confirmed
	}
	return false
}

func (x *ExplorerUtxoStatus) GetBlockTime() int64 {
	if x != nil {
		return x.BlockTime
	}
	return 0
}

var File_arkwallet_v1_bitcoin_wallet_proto protoreflect.FileDescriptor

const file_arkwallet_v1_bitcoin_wallet_proto_rawDesc = "" +
	"\n" +
	"!arkwallet/v1/bitcoin_wallet.proto\x12\farkwallet.v1\x1a!meshapi/gateway/annotations.proto\"\x17\n" +
	"\x15GetReadyUpdateRequest\".\n" +
	"\x16GetReadyUpdateResponse\x12\x14\n" +
	"\x05ready\x18\x01 \x01(\bR\x05ready\"3\n" +
	"\x1dIsTransactionConfirmedRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"~\n" +
	"\x1eIsTransactionConfirmedResponse\x12\x1c\n" +
	"\tconfirmed\x18\x01 \x01(\bR\tconfirmed\x12 \n" +
	"\vblocknumber\x18\x02 \x01(\x03R\vblocknumber\x12\x1c\n" +
	"\tblocktime\x18\x03 \x01(\x03R\tblocktime\"B\n" +
	"\x18GetOutpointStatusRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\"1\n" +
	"\x19GetOutpointStatusResponse\x12\x14\n" +
	"\x05spent\x18\x01 \x01(\bR\x05spent\"\x1b\n" +
	"\x19NotificationStreamRequest\"T\n" +
	"\x1aNotificationStreamResponse\x126\n" +
	"\aentries\x18\x01 \x03(\v2\x1c.arkwallet.v1.VtoxsPerScriptR\aentries\"Y\n" +
	"\x0eVtoxsPerScript\x12\x16\n" +
	"\x06script\x18\x01 \x01(\tR\x06script\x12/\n" +
	"\x05vtxos\x18\x02 \x03(\v2\x19.arkwallet.v1.VtxoWithKeyR\x05vtxos\"K\n" +
	"\vVtxoWithKey\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x04R\x05value\"\x10\n" +
	"\x0eGenSeedRequest\"%\n" +
	"\x0fGenSeedResponse\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\tR\x04seed\"?\n" +
	"\rCreateRequest\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\tR\x04seed\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\x10\n" +
	"\x0eCreateResponse\"@\n" +
	"\x0eRestoreRequest\x12\x12\n" +
	"\x04seed\x18\x01 \x01(\tR\x04seed\x12\x1a\n" +
	"\bpassword\x18\x02 \x01(\tR\bpassword\"\x11\n" +
	"\x0fRestoreResponse\"+\n" +
	"\rUnlockRequest\x12\x1a\n" +
	"\bpassword\x18\x01 \x01(\tR\bpassword\"\x10\n" +
	"\x0eUnlockResponse\"\r\n" +
	"\vLockRequest\"\x0e\n" +
	"\fLockResponse\"\x0f\n" +
	"\rStatusRequest\"f\n" +
	"\x0eStatusResponse\x12 \n" +
	"\vinitialized\x18\x01 \x01(\bR\vinitialized\x12\x1a\n" +
	"\bunlocked\x18\x02 \x01(\bR\bunlocked\x12\x16\n" +
	"\x06synced\x18\x03 \x01(\bR\x06synced\"\x13\n" +
	"\x11GetNetworkRequest\".\n" +
	"\x12GetNetworkResponse\x12\x18\n" +
	"\anetwork\x18\x01 \x01(\tR\anetwork\"\x19\n" +
	"\x17GetForfeitPubkeyRequest\"2\n" +
	"\x18GetForfeitPubkeyResponse\x12\x16\n" +
	"\x06pubkey\x18\x01 \x01(\tR\x06pubkey\"\x1f\n" +
	"\x1dDeriveConnectorAddressRequest\":\n" +
	"\x1eDeriveConnectorAddressResponse\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"*\n" +
	"\x16DeriveAddressesRequest\x12\x10\n" +
	"\x03num\x18\x01 \x01(\x05R\x03num\"7\n" +
	"\x17DeriveAddressesResponse\x12\x1c\n" +
	"\taddresses\x18\x01 \x03(\tR\taddresses\"]\n" +
	"\x16SignTransactionRequest\x12\x1d\n" +
	"\n" +
	"partial_tx\x18\x01 \x01(\tR\tpartialTx\x12$\n" +
	"\x0eextract_raw_tx\x18\x02 \x01(\bR\fextractRawTx\"6\n" +
	"\x17SignTransactionResponse\x12\x1b\n" +
	"\tsigned_tx\x18\x01 \x01(\tR\bsignedTx\"e\n" +
	"\x1fSignTransactionTapscriptRequest\x12\x1d\n" +
	"\n" +
	"partial_tx\x18\x01 \x01(\tR\tpartialTx\x12#\n" +
	"\rinput_indexes\x18\x02 \x03(\x05R\finputIndexes\"?\n" +
	" SignTransactionTapscriptResponse\x12\x1b\n" +
	"\tsigned_tx\x18\x01 \x01(\tR\bsignedTx\"i\n" +
	"\x12SelectUtxosRequest\x12\x14\n" +
	"\x05asset\x18\x01 \x01(\tR\x05asset\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x04R\x06amount\x12%\n" +
	"\x0econfirmed_only\x18\x03 \x01(\bR\rconfirmedOnly\"e\n" +
	"\x13SelectUtxosResponse\x12+\n" +
	"\x05utxos\x18\x01 \x03(\v2\x15.arkwallet.v1.TxInputR\x05utxos\x12!\n" +
	"\ftotal_amount\x18\x02 \x01(\x04R\vtotalAmount\"/\n" +
	"\x1bBroadcastTransactionRequest\x12\x10\n" +
	"\x03txs\x18\x01 \x03(\tR\x03txs\"2\n" +
	"\x1cBroadcastTransactionResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"(\n" +
	"\x12WaitForSyncRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"\x15\n" +
	"\x13WaitForSyncResponse\")\n" +
	"\x13EstimateFeesRequest\x12\x12\n" +
	"\x04psbt\x18\x01 \x01(\tR\x04psbt\"(\n" +
	"\x14EstimateFeesResponse\x12\x10\n" +
	"\x03fee\x18\x01 \x01(\x04R\x03fee\"\x10\n" +
	"\x0eFeeRateRequest\"7\n" +
	"\x0fFeeRateResponse\x12$\n" +
	"\x0esat_per_kvbyte\x18\x01 \x01(\x04R\fsatPerKvbyte\"H\n" +
	"\x19ListConnectorUtxosRequest\x12+\n" +
	"\x11connector_address\x18\x01 \x01(\tR\x10connectorAddress\"I\n" +
	"\x1aListConnectorUtxosResponse\x12+\n" +
	"\x05utxos\x18\x01 \x03(\v2\x15.arkwallet.v1.TxInputR\x05utxos\"\x1b\n" +
	"\x19MainAccountBalanceRequest\"\\\n" +
	"\x1aMainAccountBalanceResponse\x12\x1c\n" +
	"\tconfirmed\x18\x01 \x01(\x04R\tconfirmed\x12 \n" +
	"\vunconfirmed\x18\x02 \x01(\x04R\vunconfirmed\"!\n" +
	"\x1fConnectorsAccountBalanceRequest\"b\n" +
	" ConnectorsAccountBalanceResponse\x12\x1c\n" +
	"\tconfirmed\x18\x01 \x01(\x04R\tconfirmed\x12 \n" +
	"\vunconfirmed\x18\x02 \x01(\x04R\vunconfirmed\"K\n" +
	"\x19LockConnectorUtxosRequest\x12.\n" +
	"\x05utxos\x18\x01 \x03(\v2\x18.arkwallet.v1.TxOutpointR\x05utxos\"\x1c\n" +
	"\x1aLockConnectorUtxosResponse\"\x16\n" +
	"\x14GetDustAmountRequest\"8\n" +
	"\x15GetDustAmountResponse\x12\x1f\n" +
	"\vdust_amount\x18\x01 \x01(\x04R\n" +
	"dustAmount\"M\n" +
	"\x13WatchScriptsRequest\x12\x18\n" +
	"\ascripts\x18\x01 \x03(\tR\ascripts\x12\x1c\n" +
	"\taddresses\x18\x02 \x03(\tR\taddresses\"\x16\n" +
	"\x14WatchScriptsResponse\"O\n" +
	"\x15UnwatchScriptsRequest\x12\x18\n" +
	"\ascripts\x18\x01 \x03(\tR\ascripts\x12\x1c\n" +
	"\taddresses\x18\x02 \x03(\tR\taddresses\"\x18\n" +
	"\x16UnwatchScriptsResponse\"+\n" +
	"\x15GetTransactionRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"/\n" +
	"\x16GetTransactionResponse\x12\x15\n" +
	"\x06tx_hex\x18\x01 \x01(\tR\x05txHex\".\n" +
	"\x12SignMessageRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\fR\amessage\"3\n" +
	"\x13SignMessageResponse\x12\x1c\n" +
	"\tsignature\x18\x01 \x01(\fR\tsignature\"W\n" +
	"\x1dVerifyMessageSignatureRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\fR\amessage\x12\x1c\n" +
	"\tsignature\x18\x02 \x01(\fR\tsignature\"6\n" +
	"\x1eVerifyMessageSignatureResponse\x12\x14\n" +
	"\x05valid\x18\x01 \x01(\bR\x05valid\"\x1c\n" +
	"\x1aGetCurrentBlockTimeRequest\"Y\n" +
	"\x1bGetCurrentBlockTimeResponse\x12:\n" +
	"\ttimestamp\x18\x01 \x01(\v2\x1c.arkwallet.v1.BlockTimestampR\ttimestamp\"U\n" +
	"\x0fWithdrawRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x16\n" +
	"\x06amount\x18\x02 \x01(\x04R\x06amount\x12\x10\n" +
	"\x03all\x18\x03 \x01(\bR\x03all\"&\n" +
	"\x10WithdrawResponse\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"7\n" +
	"\x14LoadSignerKeyRequest\x12\x1f\n" +
	"\vprivate_key\x18\x01 \x01(\tR\n" +
	"privateKey\"\x17\n" +
	"\x15LoadSignerKeyResponse\"a\n" +
	"\aTxInput\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\x12\x16\n" +
	"\x06script\x18\x03 \x01(\tR\x06script\x12\x14\n" +
	"\x05value\x18\x04 \x01(\x04R\x05value\"6\n" +
	"\n" +
	"TxOutpoint\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x14\n" +
	"\x05index\x18\x02 \x01(\rR\x05index\"<\n" +
	"\x0eBlockTimestamp\x12\x16\n" +
	"\x06height\x18\x01 \x01(\rR\x06height\x12\x12\n" +
	"\x04time\x18\x02 \x01(\x03R\x04time\"2\n" +
	"\x16GetTransactionsRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"W\n" +
	"\x17GetTransactionsResponse\x12<\n" +
	"\ftransactions\x18\x01 \x03(\v2\x18.arkwallet.v1.ExplorerTxR\ftransactions\"+\n" +
	"\x15GetTxOutspendsRequest\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\"Q\n" +
	"\x16GetTxOutspendsResponse\x127\n" +
	"\toutspends\x18\x01 \x03(\v2\x19.arkwallet.v1.SpentStatusR\toutspends\"+\n" +
	"\x0fGetUtxosRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\"D\n" +
	"\x10GetUtxosResponse\x120\n" +
	"\x05utxos\x18\x01 \x03(\v2\x1a.arkwallet.v1.ExplorerUtxoR\x05utxos\"n\n" +
	"\x1eGetRedeemedVtxosBalanceRequest\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x122\n" +
	"\x15unilateral_exit_delay\x18\x02 \x01(\rR\x13unilateralExitDelay\"\xe7\x01\n" +
	"\x1fGetRedeemedVtxosBalanceResponse\x12\x18\n" +
	"\abalance\x18\x01 \x01(\x04R\abalance\x12h\n" +
	"\x0fbalance_by_time\x18\x02 \x03(\v2@.arkwallet.v1.GetRedeemedVtxosBalanceResponse.BalanceByTimeEntryR\rbalanceByTime\x1a@\n" +
	"\x12BalanceByTimeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\x03R\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value:\x028\x01\"\xbd\x01\n" +
	"\n" +
	"ExplorerTx\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12/\n" +
	"\x03vin\x18\x02 \x03(\v2\x1d.arkwallet.v1.ExplorerTxInputR\x03vin\x122\n" +
	"\x04vout\x18\x03 \x03(\v2\x1e.arkwallet.v1.ExplorerTxOutputR\x04vout\x126\n" +
	"\x06status\x18\x04 \x01(\v2\x1e.arkwallet.v1.ExplorerTxStatusR\x06status\"t\n" +
	"\x0fExplorerTxInput\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x129\n" +
	"\aprevout\x18\x03 \x01(\v2\x1f.arkwallet.v1.ExplorerTxPrevoutR\aprevout\"Z\n" +
	"\x10ExplorerTxOutput\x12\x16\n" +
	"\x06script\x18\x01 \x01(\tR\x06script\x12\x18\n" +
	"\aaddress\x18\x02 \x01(\tR\aaddress\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x04R\x05value\"C\n" +
	"\x11ExplorerTxPrevout\x12\x18\n" +
	"\aaddress\x18\x01 \x01(\tR\aaddress\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x04R\x05value\"O\n" +
	"\x10ExplorerTxStatus\x12\x1c\n" +
	"\tconfirmed\x18\x01 \x01(\bR\tconfirmed\x12\x1d\n" +
	"\n" +
	"block_time\x18\x02 \x01(\x03R\tblockTime\">\n" +
	"\vSpentStatus\x12\x14\n" +
	"\x05spent\x18\x01 \x01(\bR\x05spent\x12\x19\n" +
	"\bspent_by\x18\x02 \x01(\tR\aspentBy\"\xb4\x01\n" +
	"\fExplorerUtxo\x12\x12\n" +
	"\x04txid\x18\x01 \x01(\tR\x04txid\x12\x12\n" +
	"\x04vout\x18\x02 \x01(\rR\x04vout\x12\x14\n" +
	"\x05value\x18\x03 \x01(\x04R\x05value\x12\x14\n" +
	"\x05asset\x18\x04 \x01(\tR\x05asset\x128\n" +
	"\x06status\x18\x05 \x01(\v2 .arkwallet.v1.ExplorerUtxoStatusR\x06status\x12\x16\n" +
	"\x06script\x18\x06 \x01(\tR\x06script\"Q\n" +
	"\x12ExplorerUtxoStatus\x12\x1c\n" +
	"\tconfirmed\x18\x01 \x01(\bR\tconfirmed\x12\x1d\n" +
	"\n" +
	"block_time\x18\x02 \x01(\x03R\tblockTime2\xa3#\n" +
	"\rWalletService\x12\\\n" +
	"\aGenSeed\x12\x1c.arkwallet.v1.GenSeedRequest\x1a\x1d.arkwallet.v1.GenSeedResponse\"\x14\xb2J\x11\x12\x0f/v1/wallet/seed\x12^\n" +
	"\x06Create\x12\x1b.arkwallet.v1.CreateRequest\x1a\x1c.arkwallet.v1.CreateResponse\"\x19\xb2J\x16B\x01*\"\x11/v1/wallet/create\x12b\n" +
	"\aRestore\x12\x1c.arkwallet.v1.RestoreRequest\x1a\x1d.arkwallet.v1.RestoreResponse\"\x1a\xb2J\x17B\x01*\"\x12/v1/wallet/restore\x12^\n" +
	"\x06Unlock\x12\x1b.arkwallet.v1.UnlockRequest\x1a\x1c.arkwallet.v1.UnlockResponse\"\x19\xb2J\x16B\x01*\"\x11/v1/wallet/unlock\x12V\n" +
	"\x04Lock\x12\x19.arkwallet.v1.LockRequest\x1a\x1a.arkwallet.v1.LockResponse\"\x17\xb2J\x14B\x01*\"\x0f/v1/wallet/lock\x12[\n" +
	"\x06Status\x12\x1b.arkwallet.v1.StatusRequest\x1a\x1c.arkwallet.v1.StatusResponse\"\x16\xb2J\x13\x12\x11/v1/wallet/status\x12h\n" +
	"\n" +
	"GetNetwork\x12\x1f.arkwallet.v1.GetNetworkRequest\x1a .arkwallet.v1.GetNetworkResponse\"\x17\xb2J\x14\x12\x12/v1/wallet/network\x12\x81\x01\n" +
	"\x10GetForfeitPubkey\x12%.arkwallet.v1.GetForfeitPubkeyRequest\x1a&.arkwallet.v1.GetForfeitPubkeyResponse\"\x1e\xb2J\x1b\x12\x19/v1/wallet/forfeit-pubkey\x12\x96\x01\n" +
	"\x16DeriveConnectorAddress\x12+.arkwallet.v1.DeriveConnectorAddressRequest\x1a,.arkwallet.v1.DeriveConnectorAddressResponse\"!\xb2J\x1e\x12\x1c/v1/wallet/connector-address\x12\x83\x01\n" +
	"\x0fDeriveAddresses\x12$.arkwallet.v1.DeriveAddressesRequest\x1a%.arkwallet.v1.DeriveAddressesResponse\"#\xb2J B\x01*\"\x1b/v1/wallet/derive-addresses\x12\x83\x01\n" +
	"\x0fSignTransaction\x12$.arkwallet.v1.SignTransactionRequest\x1a%.arkwallet.v1.SignTransactionResponse\"#\xb2J B\x01*\"\x1b/v1/wallet/sign-transaction\x12\xa8\x01\n" +
	"\x18SignTransactionTapscript\x12-.arkwallet.v1.SignTransactionTapscriptRequest\x1a..arkwallet.v1.SignTransactionTapscriptResponse\"-\xb2J*B\x01*\"%/v1/wallet/sign-transaction-tapscript\x12s\n" +
	"\vSelectUtxos\x12 .arkwallet.v1.SelectUtxosRequest\x1a!.arkwallet.v1.SelectUtxosResponse\"\x1f\xb2J\x1cB\x01*\"\x17/v1/wallet/select-utxos\x12\x8b\x01\n" +
	"\x14BroadcastTransaction\x12).arkwallet.v1.BroadcastTransactionRequest\x1a*.arkwallet.v1.BroadcastTransactionResponse\"\x1c\xb2J\x19B\x01*\"\x14/v1/wallet/broadcast\x12{\n" +
	"\x0eGetReadyUpdate\x12#.arkwallet.v1.GetReadyUpdateRequest\x1a$.arkwallet.v1.GetReadyUpdateResponse\"\x1c\xb2J\x19\x12\x17/v1/wallet/ready-update0\x01\x12\x9a\x01\n" +
	"\x16IsTransactionConfirmed\x12+.arkwallet.v1.IsTransactionConfirmedRequest\x1a,.arkwallet.v1.IsTransactionConfirmedResponse\"%\xb2J\"\x12 /v1/wallet/transaction-confirmed\x12\x85\x01\n" +
	"\x11GetOutpointStatus\x12&.arkwallet.v1.GetOutpointStatusRequest\x1a'.arkwallet.v1.GetOutpointStatusResponse\"\x1f\xb2J\x1c\x12\x1a/v1/wallet/outpoint-status\x12w\n" +
	"\fEstimateFees\x12!.arkwallet.v1.EstimateFeesRequest\x1a\".arkwallet.v1.EstimateFeesResponse\" \xb2J\x1dB\x01*\"\x18/v1/wallet/estimate-fees\x12`\n" +
	"\aFeeRate\x12\x1c.arkwallet.v1.FeeRateRequest\x1a\x1d.arkwallet.v1.FeeRateResponse\"\x18\xb2J\x15\x12\x13/v1/wallet/fee-rate\x12\x88\x01\n" +
	"\x12ListConnectorUtxos\x12'.arkwallet.v1.ListConnectorUtxosRequest\x1a(.arkwallet.v1.ListConnectorUtxosResponse\"\x1f\xb2J\x1c\x12\x1a/v1/wallet/connector-utxos\x12\x8d\x01\n" +
	"\x12MainAccountBalance\x12'.arkwallet.v1.MainAccountBalanceRequest\x1a(.arkwallet.v1.MainAccountBalanceResponse\"$\xb2J!\x12\x1f/v1/wallet/main-account-balance\x12\xa5\x01\n" +
	"\x18ConnectorsAccountBalance\x12-.arkwallet.v1.ConnectorsAccountBalanceRequest\x1a..arkwallet.v1.ConnectorsAccountBalanceResponse\"*\xb2J'\x12%/v1/wallet/connectors-account-balance\x12\x90\x01\n" +
	"\x12LockConnectorUtxos\x12'.arkwallet.v1.LockConnectorUtxosRequest\x1a(.arkwallet.v1.LockConnectorUtxosResponse\"'\xb2J$B\x01*\"\x1f/v1/wallet/lock-connector-utxos\x12n\n" +
	"\rGetDustAmount\x12\".arkwallet.v1.GetDustAmountRequest\x1a#.arkwallet.v1.GetDustAmountResponse\"\x14\xb2J\x11\x12\x0f/v1/wallet/dust\x12o\n" +
	"\x0eGetTransaction\x12#.arkwallet.v1.GetTransactionRequest\x1a$.arkwallet.v1.GetTransactionResponse\"\x12\xb2J\x0f\x12\r/v1/wallet/tx\x12s\n" +
	"\vSignMessage\x12 .arkwallet.v1.SignMessageRequest\x1a!.arkwallet.v1.SignMessageResponse\"\x1f\xb2J\x1cB\x01*\"\x17/v1/wallet/sign-message\x12\xa0\x01\n" +
	"\x16VerifyMessageSignature\x12+.arkwallet.v1.VerifyMessageSignatureRequest\x1a,.arkwallet.v1.VerifyMessageSignatureResponse\"+\xb2J(B\x01*\"#/v1/wallet/verify-message-signature\x12\x86\x01\n" +
	"\x13GetCurrentBlockTime\x12(.arkwallet.v1.GetCurrentBlockTimeRequest\x1a).arkwallet.v1.GetCurrentBlockTimeResponse\"\x1a\xb2J\x17\x12\x15/v1/wallet/block-time\x12f\n" +
	"\bWithdraw\x12\x1d.arkwallet.v1.WithdrawRequest\x1a\x1e.arkwallet.v1.WithdrawResponse\"\x1b\xb2J\x18B\x01*\"\x13/v1/wallet/withdraw\x12w\n" +
	"\fWatchScripts\x12!.arkwallet.v1.WatchScriptsRequest\x1a\".arkwallet.v1.WatchScriptsResponse\" \xb2J\x1dB\x01*\"\x18/v1/wallet/watch-scripts\x12\x7f\n" +
	"\x0eUnwatchScripts\x12#.arkwallet.v1.UnwatchScriptsRequest\x1a$.arkwallet.v1.UnwatchScriptsResponse\"\"\xb2J\x1fB\x01*\"\x1a/v1/wallet/unwatch-scripts\x12\x88\x01\n" +
	"\x12NotificationStream\x12'.arkwallet.v1.NotificationStreamRequest\x1a(.arkwallet.v1.NotificationStreamResponse\"\x1d\xb2J\x1a\x12\x18/v1/wallet/notifications0\x01\x12w\n" +
	"\rLoadSignerKey\x12\".arkwallet.v1.LoadSignerKeyRequest\x1a#.arkwallet.v1.LoadSignerKeyResponse\"\x1d\xb2J\x1aB\x01*\"\x15/v1/wallet/signer-key\x12~\n" +
	"\x0fGetTransactions\x12$.arkwallet.v1.GetTransactionsRequest\x1a%.arkwallet.v1.GetTransactionsResponse\"\x1e\xb2J\x1b\x12\x19/v1/explorer/transactions\x12{\n" +
	"\x0eGetTxOutspends\x12#.arkwallet.v1.GetTxOutspendsRequest\x1a$.arkwallet.v1.GetTxOutspendsResponse\"\x1e\xb2J\x1b\x12\x19/v1/explorer/tx-outspends\x12b\n" +
	"\bGetUtxos\x12\x1d.arkwallet.v1.GetUtxosRequest\x1a\x1e.arkwallet.v1.GetUtxosResponse\"\x17\xb2J\x14\x12\x12/v1/explorer/utxosB\xab\x01\n" +
	"\x10com.arkwallet.v1B\x12BitcoinWalletProtoP\x01Z2github.com/arkade-os/arkd/arkwallet/v1;arkwalletv1\xa2\x02\x03AXX\xaa\x02\fArkwallet.V1\xca\x02\fArkwallet\\V1\xe2\x02\x18Arkwallet\\V1\\GPBMetadata\xea\x02\rArkwallet::V1b\x06proto3"

var (
	file_arkwallet_v1_bitcoin_wallet_proto_rawDescOnce sync.Once
	file_arkwallet_v1_bitcoin_wallet_proto_rawDescData []byte
)

func file_arkwallet_v1_bitcoin_wallet_proto_rawDescGZIP() []byte {
	file_arkwallet_v1_bitcoin_wallet_proto_rawDescOnce.Do(func() {
		file_arkwallet_v1_bitcoin_wallet_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_arkwallet_v1_bitcoin_wallet_proto_rawDesc), len(file_arkwallet_v1_bitcoin_wallet_proto_rawDesc)))
	})
	return file_arkwallet_v1_bitcoin_wallet_proto_rawDescData
}

var file_arkwallet_v1_bitcoin_wallet_proto_msgTypes = make([]protoimpl.MessageInfo, 90)
var file_arkwallet_v1_bitcoin_wallet_proto_goTypes = []any{
	(*GetReadyUpdateRequest)(nil),            // 0: arkwallet.v1.GetReadyUpdateRequest
	(*GetReadyUpdateResponse)(nil),           // 1: arkwallet.v1.GetReadyUpdateResponse
	(*IsTransactionConfirmedRequest)(nil),    // 2: arkwallet.v1.IsTransactionConfirmedRequest
	(*IsTransactionConfirmedResponse)(nil),   // 3: arkwallet.v1.IsTransactionConfirmedResponse
	(*GetOutpointStatusRequest)(nil),         // 4: arkwallet.v1.GetOutpointStatusRequest
	(*GetOutpointStatusResponse)(nil),        // 5: arkwallet.v1.GetOutpointStatusResponse
	(*NotificationStreamRequest)(nil),        // 6: arkwallet.v1.NotificationStreamRequest
	(*NotificationStreamResponse)(nil),       // 7: arkwallet.v1.NotificationStreamResponse
	(*VtoxsPerScript)(nil),                   // 8: arkwallet.v1.VtoxsPerScript
	(*VtxoWithKey)(nil),                      // 9: arkwallet.v1.VtxoWithKey
	(*GenSeedRequest)(nil),                   // 10: arkwallet.v1.GenSeedRequest
	(*GenSeedResponse)(nil),                  // 11: arkwallet.v1.GenSeedResponse
	(*CreateRequest)(nil),                    // 12: arkwallet.v1.CreateRequest
	(*CreateResponse)(nil),                   // 13: arkwallet.v1.CreateResponse
	(*RestoreRequest)(nil),                   // 14: arkwallet.v1.RestoreRequest
	(*RestoreResponse)(nil),                  // 15: arkwallet.v1.RestoreResponse
	(*UnlockRequest)(nil),                    // 16: arkwallet.v1.UnlockRequest
	(*UnlockResponse)(nil),                   // 17: arkwallet.v1.UnlockResponse
	(*LockRequest)(nil),                      // 18: arkwallet.v1.LockRequest
	(*LockResponse)(nil),                     // 19: arkwallet.v1.LockResponse
	(*StatusRequest)(nil),                    // 20: arkwallet.v1.StatusRequest
	(*StatusResponse)(nil),                   // 21: arkwallet.v1.StatusResponse
	(*GetNetworkRequest)(nil),                // 22: arkwallet.v1.GetNetworkRequest
	(*GetNetworkResponse)(nil),               // 23: arkwallet.v1.GetNetworkResponse
	(*GetForfeitPubkeyRequest)(nil),          // 24: arkwallet.v1.GetForfeitPubkeyRequest
	(*GetForfeitPubkeyResponse)(nil),         // 25: arkwallet.v1.GetForfeitPubkeyResponse
	(*DeriveConnectorAddressRequest)(nil),    // 26: arkwallet.v1.DeriveConnectorAddressRequest
	(*DeriveConnectorAddressResponse)(nil),   // 27: arkwallet.v1.DeriveConnectorAddressResponse
	(*DeriveAddressesRequest)(nil),           // 28: arkwallet.v1.DeriveAddressesRequest
	(*DeriveAddressesResponse)(nil),          // 29: arkwallet.v1.DeriveAddressesResponse
	(*SignTransactionRequest)(nil),           // 30: arkwallet.v1.SignTransactionRequest
	(*SignTransactionResponse)(nil),          // 31: arkwallet.v1.SignTransactionResponse
	(*SignTransactionTapscriptRequest)(nil),  // 32: arkwallet.v1.SignTransactionTapscriptRequest
	(*SignTransactionTapscriptResponse)(nil), // 33: arkwallet.v1.SignTransactionTapscriptResponse
	(*SelectUtxosRequest)(nil),               // 34: arkwallet.v1.SelectUtxosRequest
	(*SelectUtxosResponse)(nil),              // 35: arkwallet.v1.SelectUtxosResponse
	(*BroadcastTransactionRequest)(nil),      // 36: arkwallet.v1.BroadcastTransactionRequest
	(*BroadcastTransactionResponse)(nil),     // 37: arkwallet.v1.BroadcastTransactionResponse
	(*WaitForSyncRequest)(nil),               // 38: arkwallet.v1.WaitForSyncRequest
	(*WaitForSyncResponse)(nil),              // 39: arkwallet.v1.WaitForSyncResponse
	(*EstimateFeesRequest)(nil),              // 40: arkwallet.v1.EstimateFeesRequest
	(*EstimateFeesResponse)(nil),             // 41: arkwallet.v1.EstimateFeesResponse
	(*FeeRateRequest)(nil),                   // 42: arkwallet.v1.FeeRateRequest
	(*FeeRateResponse)(nil),                  // 43: arkwallet.v1.FeeRateResponse
	(*ListConnectorUtxosRequest)(nil),        // 44: arkwallet.v1.ListConnectorUtxosRequest
	(*ListConnectorUtxosResponse)(nil),       // 45: arkwallet.v1.ListConnectorUtxosResponse
	(*MainAccountBalanceRequest)(nil),        // 46: arkwallet.v1.MainAccountBalanceRequest
	(*MainAccountBalanceResponse)(nil),       // 47: arkwallet.v1.MainAccountBalanceResponse
	(*ConnectorsAccountBalanceRequest)(nil),  // 48: arkwallet.v1.ConnectorsAccountBalanceRequest
	(*ConnectorsAccountBalanceResponse)(nil), // 49: arkwallet.v1.ConnectorsAccountBalanceResponse
	(*LockConnectorUtxosRequest)(nil),        // 50: arkwallet.v1.LockConnectorUtxosRequest
	(*LockConnectorUtxosResponse)(nil),       // 51: arkwallet.v1.LockConnectorUtxosResponse
	(*GetDustAmountRequest)(nil),             // 52: arkwallet.v1.GetDustAmountRequest
	(*GetDustAmountResponse)(nil),            // 53: arkwallet.v1.GetDustAmountResponse
	(*WatchScriptsRequest)(nil),              // 54: arkwallet.v1.WatchScriptsRequest
	(*WatchScriptsResponse)(nil),             // 55: arkwallet.v1.WatchScriptsResponse
	(*UnwatchScriptsRequest)(nil),            // 56: arkwallet.v1.UnwatchScriptsRequest
	(*UnwatchScriptsResponse)(nil),           // 57: arkwallet.v1.UnwatchScriptsResponse
	(*GetTransactionRequest)(nil),            // 58: arkwallet.v1.GetTransactionRequest
	(*GetTransactionResponse)(nil),           // 59: arkwallet.v1.GetTransactionResponse
	(*SignMessageRequest)(nil),               // 60: arkwallet.v1.SignMessageRequest
	(*SignMessageResponse)(nil),              // 61: arkwallet.v1.SignMessageResponse
	(*VerifyMessageSignatureRequest)(nil),    // 62: arkwallet.v1.VerifyMessageSignatureRequest
	(*VerifyMessageSignatureResponse)(nil),   // 63: arkwallet.v1.VerifyMessageSignatureResponse
	(*GetCurrentBlockTimeRequest)(nil),       // 64: arkwallet.v1.GetCurrentBlockTimeRequest
	(*GetCurrentBlockTimeResponse)(nil),      // 65: arkwallet.v1.GetCurrentBlockTimeResponse
	(*WithdrawRequest)(nil),                  // 66: arkwallet.v1.WithdrawRequest
	(*WithdrawResponse)(nil),                 // 67: arkwallet.v1.WithdrawResponse
	(*LoadSignerKeyRequest)(nil),             // 68: arkwallet.v1.LoadSignerKeyRequest
	(*LoadSignerKeyResponse)(nil),            // 69: arkwallet.v1.LoadSignerKeyResponse
	(*TxInput)(nil),                          // 70: arkwallet.v1.TxInput
	(*TxOutpoint)(nil),                       // 71: arkwallet.v1.TxOutpoint
	(*BlockTimestamp)(nil),                   // 72: arkwallet.v1.BlockTimestamp
	(*GetTransactionsRequest)(nil),           // 73: arkwallet.v1.GetTransactionsRequest
	(*GetTransactionsResponse)(nil),          // 74: arkwallet.v1.GetTransactionsResponse
	(*GetTxOutspendsRequest)(nil),            // 75: arkwallet.v1.GetTxOutspendsRequest
	(*GetTxOutspendsResponse)(nil),           // 76: arkwallet.v1.GetTxOutspendsResponse
	(*GetUtxosRequest)(nil),                  // 77: arkwallet.v1.GetUtxosRequest
	(*GetUtxosResponse)(nil),                 // 78: arkwallet.v1.GetUtxosResponse
	(*GetRedeemedVtxosBalanceRequest)(nil),   // 79: arkwallet.v1.GetRedeemedVtxosBalanceRequest
	(*GetRedeemedVtxosBalanceResponse)(nil),  // 80: arkwallet.v1.GetRedeemedVtxosBalanceResponse
	(*ExplorerTx)(nil),                       // 81: arkwallet.v1.ExplorerTx
	(*ExplorerTxInput)(nil),                  // 82: arkwallet.v1.ExplorerTxInput
	(*ExplorerTxOutput)(nil),                 // 83: arkwallet.v1.ExplorerTxOutput
	(*ExplorerTxPrevout)(nil),                // 84: arkwallet.v1.ExplorerTxPrevout
	(*ExplorerTxStatus)(nil),                 // 85: arkwallet.v1.ExplorerTxStatus
	(*SpentStatus)(nil),                      // 86: arkwallet.v1.SpentStatus
	(*ExplorerUtxo)(nil),                     // 87: arkwallet.v1.ExplorerUtxo
	(*ExplorerUtxoStatus)(nil),               // 88: arkwallet.v1.ExplorerUtxoStatus
	nil,                                      // 89: arkwallet.v1.GetRedeemedVtxosBalanceResponse.BalanceByTimeEntry
}
var file_arkwallet_v1_bitcoin_wallet_proto_depIdxs = []int32{
	8,  // 0: arkwallet.v1.NotificationStreamResponse.entries:type_name -> arkwallet.v1.VtoxsPerScript
	9,  // 1: arkwallet.v1.VtoxsPerScript.vtxos:type_name -> arkwallet.v1.VtxoWithKey
	70, // 2: arkwallet.v1.SelectUtxosResponse.utxos:type_name -> arkwallet.v1.TxInput
	70, // 3: arkwallet.v1.ListConnectorUtxosResponse.utxos:type_name -> arkwallet.v1.TxInput
	71, // 4: arkwallet.v1.LockConnectorUtxosRequest.utxos:type_name -> arkwallet.v1.TxOutpoint
	72, // 5: arkwallet.v1.GetCurrentBlockTimeResponse.timestamp:type_name -> arkwallet.v1.BlockTimestamp
	81, // 6: arkwallet.v1.GetTransactionsResponse.transactions:type_name -> arkwallet.v1.ExplorerTx
	86, // 7: arkwallet.v1.GetTxOutspendsResponse.outspends:type_name -> arkwallet.v1.SpentStatus
	87, // 8: arkwallet.v1.GetUtxosResponse.utxos:type_name -> arkwallet.v1.ExplorerUtxo
	89, // 9: arkwallet.v1.GetRedeemedVtxosBalanceResponse.balance_by_time:type_name -> arkwallet.v1.GetRedeemedVtxosBalanceResponse.BalanceByTimeEntry
	82, // 10: arkwallet.v1.ExplorerTx.vin:type_name -> arkwallet.v1.ExplorerTxInput
	83, // 11: arkwallet.v1.ExplorerTx.vout:type_name -> arkwallet.v1.ExplorerTxOutput
	85, // 12: arkwallet.v1.ExplorerTx.status:type_name -> arkwallet.v1.ExplorerTxStatus
	84, // 13: arkwallet.v1.ExplorerTxInput.prevout:type_name -> arkwallet.v1.ExplorerTxPrevout
	88, // 14: arkwallet.v1.ExplorerUtxo.status:type_name -> arkwallet.v1.ExplorerUtxoStatus
	10, // 15: arkwallet.v1.WalletService.GenSeed:input_type -> arkwallet.v1.GenSeedRequest
	12, // 16: arkwallet.v1.WalletService.Create:input_type -> arkwallet.v1.CreateRequest
	14, // 17: arkwallet.v1.WalletService.Restore:input_type -> arkwallet.v1.RestoreRequest
	16, // 18: arkwallet.v1.WalletService.Unlock:input_type -> arkwallet.v1.UnlockRequest
	18, // 19: arkwallet.v1.WalletService.Lock:input_type -> arkwallet.v1.LockRequest
	20, // 20: arkwallet.v1.WalletService.Status:input_type -> arkwallet.v1.StatusRequest
	22, // 21: arkwallet.v1.WalletService.GetNetwork:input_type -> arkwallet.v1.GetNetworkRequest
	24, // 22: arkwallet.v1.WalletService.GetForfeitPubkey:input_type -> arkwallet.v1.GetForfeitPubkeyRequest
	26, // 23: arkwallet.v1.WalletService.DeriveConnectorAddress:input_type -> arkwallet.v1.DeriveConnectorAddressRequest
	28, // 24: arkwallet.v1.WalletService.DeriveAddresses:input_type -> arkwallet.v1.DeriveAddressesRequest
	30, // 25: arkwallet.v1.WalletService.SignTransaction:input_type -> arkwallet.v1.SignTransactionRequest
	32, // 26: arkwallet.v1.WalletService.SignTransactionTapscript:input_type -> arkwallet.v1.SignTransactionTapscriptRequest
	34, // 27: arkwallet.v1.WalletService.SelectUtxos:input_type -> arkwallet.v1.SelectUtxosRequest
	36, // 28: arkwallet.v1.WalletService.BroadcastTransaction:input_type -> arkwallet.v1.BroadcastTransactionRequest
	0,  // 29: arkwallet.v1.WalletService.GetReadyUpdate:input_type -> arkwallet.v1.GetReadyUpdateRequest
	2,  // 30: arkwallet.v1.WalletService.IsTransactionConfirmed:input_type -> arkwallet.v1.IsTransactionConfirmedRequest
	4,  // 31: arkwallet.v1.WalletService.GetOutpointStatus:input_type -> arkwallet.v1.GetOutpointStatusRequest
	40, // 32: arkwallet.v1.WalletService.EstimateFees:input_type -> arkwallet.v1.EstimateFeesRequest
	42, // 33: arkwallet.v1.WalletService.FeeRate:input_type -> arkwallet.v1.FeeRateRequest
	44, // 34: arkwallet.v1.WalletService.ListConnectorUtxos:input_type -> arkwallet.v1.ListConnectorUtxosRequest
	46, // 35: arkwallet.v1.WalletService.MainAccountBalance:input_type -> arkwallet.v1.MainAccountBalanceRequest
	48, // 36: arkwallet.v1.WalletService.ConnectorsAccountBalance:input_type -> arkwallet.v1.ConnectorsAccountBalanceRequest
	50, // 37: arkwallet.v1.WalletService.LockConnectorUtxos:input_type -> arkwallet.v1.LockConnectorUtxosRequest
	52, // 38: arkwallet.v1.WalletService.GetDustAmount:input_type -> arkwallet.v1.GetDustAmountRequest
	58, // 39: arkwallet.v1.WalletService.GetTransaction:input_type -> arkwallet.v1.GetTransactionRequest
	60, // 40: arkwallet.v1.WalletService.SignMessage:input_type -> arkwallet.v1.SignMessageRequest
	62, // 41: arkwallet.v1.WalletService.VerifyMessageSignature:input_type -> arkwallet.v1.VerifyMessageSignatureRequest
	64, // 42: arkwallet.v1.WalletService.GetCurrentBlockTime:input_type -> arkwallet.v1.GetCurrentBlockTimeRequest
	66, // 43: arkwallet.v1.WalletService.Withdraw:input_type -> arkwallet.v1.WithdrawRequest
	54, // 44: arkwallet.v1.WalletService.WatchScripts:input_type -> arkwallet.v1.WatchScriptsRequest
	56, // 45: arkwallet.v1.WalletService.UnwatchScripts:input_type -> arkwallet.v1.UnwatchScriptsRequest
	6,  // 46: arkwallet.v1.WalletService.NotificationStream:input_type -> arkwallet.v1.NotificationStreamRequest
	68, // 47: arkwallet.v1.WalletService.LoadSignerKey:input_type -> arkwallet.v1.LoadSignerKeyRequest
	73, // 48: arkwallet.v1.WalletService.GetTransactions:input_type -> arkwallet.v1.GetTransactionsRequest
	75, // 49: arkwallet.v1.WalletService.GetTxOutspends:input_type -> arkwallet.v1.GetTxOutspendsRequest
	77, // 50: arkwallet.v1.WalletService.GetUtxos:input_type -> arkwallet.v1.GetUtxosRequest
	11, // 51: arkwallet.v1.WalletService.GenSeed:output_type -> arkwallet.v1.GenSeedResponse
	13, // 52: arkwallet.v1.WalletService.Create:output_type -> arkwallet.v1.CreateResponse
	15, // 53: arkwallet.v1.WalletService.Restore:output_type -> arkwallet.v1.RestoreResponse
	17, // 54: arkwallet.v1.WalletService.Unlock:output_type -> arkwallet.v1.UnlockResponse
	19, // 55: arkwallet.v1.WalletService.Lock:output_type -> arkwallet.v1.LockResponse
	21, // 56: arkwallet.v1.WalletService.Status:output_type -> arkwallet.v1.StatusResponse
	23, // 57: arkwallet.v1.WalletService.GetNetwork:output_type -> arkwallet.v1.GetNetworkResponse
	25, // 58: arkwallet.v1.WalletService.GetForfeitPubkey:output_type -> arkwallet.v1.GetForfeitPubkeyResponse
	27, // 59: arkwallet.v1.WalletService.DeriveConnectorAddress:output_type -> arkwallet.v1.DeriveConnectorAddressResponse
	29, // 60: arkwallet.v1.WalletService.DeriveAddresses:output_type -> arkwallet.v1.DeriveAddressesResponse
	31, // 61: arkwallet.v1.WalletService.SignTransaction:output_type -> arkwallet.v1.SignTransactionResponse
	33, // 62: arkwallet.v1.WalletService.SignTransactionTapscript:output_type -> arkwallet.v1.SignTransactionTapscriptResponse
	35, // 63: arkwallet.v1.WalletService.SelectUtxos:output_type -> arkwallet.v1.SelectUtxosResponse
	37, // 64: arkwallet.v1.WalletService.BroadcastTransaction:output_type -> arkwallet.v1.BroadcastTransactionResponse
	1,  // 65: arkwallet.v1.WalletService.GetReadyUpdate:output_type -> arkwallet.v1.GetReadyUpdateResponse
	3,  // 66: arkwallet.v1.WalletService.IsTransactionConfirmed:output_type -> arkwallet.v1.IsTransactionConfirmedResponse
	5,  // 67: arkwallet.v1.WalletService.GetOutpointStatus:output_type -> arkwallet.v1.GetOutpointStatusResponse
	41, // 68: arkwallet.v1.WalletService.EstimateFees:output_type -> arkwallet.v1.EstimateFeesResponse
	43, // 69: arkwallet.v1.WalletService.FeeRate:output_type -> arkwallet.v1.FeeRateResponse
	45, // 70: arkwallet.v1.WalletService.ListConnectorUtxos:output_type -> arkwallet.v1.ListConnectorUtxosResponse
	47, // 71: arkwallet.v1.WalletService.MainAccountBalance:output_type -> arkwallet.v1.MainAccountBalanceResponse
	49, // 72: arkwallet.v1.WalletService.ConnectorsAccountBalance:output_type -> arkwallet.v1.ConnectorsAccountBalanceResponse
	51, // 73: arkwallet.v1.WalletService.LockConnectorUtxos:output_type -> arkwallet.v1.LockConnectorUtxosResponse
	53, // 74: arkwallet.v1.WalletService.GetDustAmount:output_type -> arkwallet.v1.GetDustAmountResponse
	59, // 75: arkwallet.v1.WalletService.GetTransaction:output_type -> arkwallet.v1.GetTransactionResponse
	61, // 76: arkwallet.v1.WalletService.SignMessage:output_type -> arkwallet.v1.SignMessageResponse
	63, // 77: arkwallet.v1.WalletService.VerifyMessageSignature:output_type -> arkwallet.v1.VerifyMessageSignatureResponse
	65, // 78: arkwallet.v1.WalletService.GetCurrentBlockTime:output_type -> arkwallet.v1.GetCurrentBlockTimeResponse
	67, // 79: arkwallet.v1.WalletService.Withdraw:output_type -> arkwallet.v1.WithdrawResponse
	55, // 80: arkwallet.v1.WalletService.WatchScripts:output_type -> arkwallet.v1.WatchScriptsResponse
	57, // 81: arkwallet.v1.WalletService.UnwatchScripts:output_type -> arkwallet.v1.UnwatchScriptsResponse
	7,  // 82: arkwallet.v1.WalletService.NotificationStream:output_type -> arkwallet.v1.NotificationStreamResponse
	69, // 83: arkwallet.v1.WalletService.LoadSignerKey:output_type -> arkwallet.v1.LoadSignerKeyResponse
	74, // 84: arkwallet.v1.WalletService.GetTransactions:output_type -> arkwallet.v1.GetTransactionsResponse
	76, // 85: arkwallet.v1.WalletService.GetTxOutspends:output_type -> arkwallet.v1.GetTxOutspendsResponse
	78, // 86: arkwallet.v1.WalletService.GetUtxos:output_type -> arkwallet.v1.GetUtxosResponse
	51, // [51:87] is the sub-list for method output_type
	15, // [15:51] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_arkwallet_v1_bitcoin_wallet_proto_init() }
func file_arkwallet_v1_bitcoin_wallet_proto_init() {
	if File_arkwallet_v1_bitcoin_wallet_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_arkwallet_v1_bitcoin_wallet_proto_rawDesc), len(file_arkwallet_v1_bitcoin_wallet_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   90,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_arkwallet_v1_bitcoin_wallet_proto_goTypes,
		DependencyIndexes: file_arkwallet_v1_bitcoin_wallet_proto_depIdxs,
		MessageInfos:      file_arkwallet_v1_bitcoin_wallet_proto_msgTypes,
	}.Build()
	File_arkwallet_v1_bitcoin_wallet_proto = out.File
	file_arkwallet_v1_bitcoin_wallet_proto_goTypes = nil
	file_arkwallet_v1_bitcoin_wallet_proto_depIdxs = nil
}
